<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">gtk/gtk.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>main.c</label>
        <link refid="main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtk/gtk.h</label>
      </node>
      <node id="8">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structlocation" prot="public">location</innerclass>
    <innerclass refid="structproperty" prot="public">property</innerclass>
    <innerclass refid="structlog_in_window" prot="public">logInWindow</innerclass>
    <innerclass refid="structconfig_window" prot="public">configWindow</innerclass>
    <innerclass refid="structadmin_window" prot="public">adminWindow</innerclass>
    <innerclass refid="structreview_window" prot="public">reviewWindow</innerclass>
    <innerclass refid="structcustomer_window" prot="public">customerWindow</innerclass>
    <innerclass refid="structapp" prot="public">app</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="main_8c_1a71147341558d2823036988bfc0e6575d" prot="public" static="no">
        <name>NUMBER_OF_PRICE_RANGES</name>
        <initializer>3</initializer>
        <briefdescription>
<para>a constant for the number of price ranges That is to say how many times can the discount chagge </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>: Mattie Fuller Class: CS2060-002 Project: Project Iteration: 2 Description: This is a project that will handle &quot;airbnb&quot; style bookings for a fictional renting service &quot;airuccs.&quot; This is the second iteration and is fully GUI dependant and is attempting to implement private public key authentication. Note that in the spirit of staying as native to c as possible I have opted away from using xml (html-esque) GUI builders that gtk+ provides, these are much easier but are not really in the spirit of pure c program so I wont be using them.</para>
</simplesect>
Note: it is really clunky having this entire thing in one file, so sorry about that</para>
<para>Documentation style: comments are following doxgen C standard as I have found this is the most common style that tends to be used, let me know if you would prefer a different style.</para>
<para>Security Standard: SEI CERT C Standard </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="37" column="9" bodyfile="main.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" prot="public" static="no">
        <name>NUMBER_OF_REVIEW_CATS</name>
        <initializer>5</initializer>
        <briefdescription>
<para>the nubmer of review categories </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="41" column="9" bodyfile="main.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" prot="public" static="no">
        <name>STRING_SIZE</name>
        <initializer>80</initializer>
        <briefdescription>
<para>max size of strings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="45" column="9" bodyfile="main.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a74abd28f848a5dc45616674ac761f00d" prot="public" static="no">
        <name>BASE_DISCOUNT</name>
        <initializer>50</initializer>
        <briefdescription>
<para>the base first discount </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="49" column="9" bodyfile="main.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a45f2278bc729f1796e44d1d1a2a79568" prot="public" static="no">
        <name>ADD_MOCK_REVIEWS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>a boolean of whether mock data should be generated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="54" column="9" bodyfile="main.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a2cac2faee136330ef8ab53af2312f4ec" prot="public" static="no">
        <name>MAX_REVIEW</name>
        <initializer>5</initializer>
        <briefdescription>
<para>the max number than can be entered on the review&apos;s menu inputs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="58" column="9" bodyfile="main.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a190d1357e6d0ee51f3b008700ed84b08" prot="public" static="no">
        <name>MIN_REVIEW</name>
        <initializer>1</initializer>
        <briefdescription>
<para>the min number than can be entered on the review&apos;s menu inputs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="62" column="9" bodyfile="main.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a72242c2e53086385d9d5dd3aadcdfa5b" prot="public" static="no">
        <name>DEFINE_LL_OF_TYPE_ARR_WITH_SIZE</name>
        <param><defname>TYPE</defname></param>
        <param><defname>size</defname></param>
        <param><defname>typeName</defname></param>
        <param><defname>structName</defname></param>
        <initializer>typedef struct structName {\
  struct structName * next;\
  TYPE data[size];\
} typeName;</initializer>
        <briefdescription>
<para>setup a generic linked list of arrays of size </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>the data type of the linked list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the array (the array is the data of the node) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>the litteral name that the linked list type will be created as </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structName</parametername>
</parameternamelist>
<parameterdescription>
<para>the litteral name that the linked list struct will be created as </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="71" column="9" bodyfile="main.c" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aa95cc25626aaea9a264528de81ad3c09" prot="public" static="no">
        <name>INHERIT_BASE_WIN</name>
        <initializer>  GtkWidget* window;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="212" column="9" bodyfile="main.c" bodystart="212" bodyend="213"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a0599f56005d18d1574abdb5b746e69cc" prot="public" static="no">
        <name>NumTabs</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="744" column="9" bodyfile="main.c" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a826ece061102e9edb8bd1d2167fbc710" prot="public" static="no">
        <name>BIT_LEVEL</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First To walk anyone reading through the general methodology, recall that RSA is an algorithm for generating complex keys for pub/priv key crypto</para>
<para>It asserts that it is very hard to find large integer common denominators of primes it consists of 4 steps</para>
<para>1: choose two arbitraty large primes, denoted as p and q. I will use these names below as it is what they are called within the algorithm and is rather standard -These should be chosen at random, I will be using a probabalistic aproach to find primes as we only need to find 2 we can basically guess and assume we will be right within x where x is usually less than 2000 guesses which is computationally insignificant for this scale 2: we then compute n = p times q --&gt; n=pq. 3: then it gets harder. We now compute Carmichaels totient function of n (denoted as λ(n)) Its a lot of math that will be explained in the functions below for it 4: choose an integer e such taht 2 &lt; e &lt; λ(n) and gcd(e, λ(n)) = 1; that is, e and λ(n) are coprime 5: determine d as d == e^-1 that is d is the modular multiplicitive invers of e modulo λ(n)</para>
<para>thus the public key becomes modulus n and the exponent e and the private key consists of exponent d, p, q and λ(n), which are used to compute d</para>
<para>in short d is the private key n^e is the public key ====================== </para>
<sect1 id="main_8c_1autotoc_md4">
<title>Declarations</title>
</sect1>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1327" column="9" bodyfile="main.c" bodystart="1327" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="main_8c_1a5f2225f46c54d4268143a3e9586f67a4" prot="public" static="no">
        <type>struct <ref refid="structlocation" kindref="compound">location</ref></type>
        <definition>typedef struct location Location</definition>
        <argsstring></argsstring>
        <name>Location</name>
        <briefdescription>
<para>the location of the property @initalizer: initLocation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="132" column="10"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8c_1af6ffa2d6fd1c39d309a4465a1ce7af87" prot="public" static="no">
        <type>struct <ref refid="structproperty" kindref="compound">property</ref></type>
        <definition>typedef struct property Property</definition>
        <argsstring></argsstring>
        <name>Property</name>
        <briefdescription>
<para>A struct representing a property @initalizer: initProperty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="178" column="10"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8c_1a8e1170805a53ee8c3845cb6e425aa233" prot="public" static="no">
        <type>struct <ref refid="structlog_in_window" kindref="compound">logInWindow</ref></type>
        <definition>typedef struct logInWindow LoginWindow</definition>
        <argsstring></argsstring>
        <name>LoginWindow</name>
        <briefdescription>
<para>the login window of the app </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="236" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8c_1aed36cff1d64d95e664ec581815c2814b" prot="public" static="no">
        <type>struct <ref refid="structconfig_window" kindref="compound">configWindow</ref></type>
        <definition>typedef struct configWindow ConfigWindow</definition>
        <argsstring></argsstring>
        <name>ConfigWindow</name>
        <briefdescription>
<para>the config window of the app </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="242" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8c_1a5a63edfd294f78985feeb3fc83f194bd" prot="public" static="no">
        <type>struct <ref refid="structadmin_window" kindref="compound">adminWindow</ref></type>
        <definition>typedef struct adminWindow AdminWindow</definition>
        <argsstring></argsstring>
        <name>AdminWindow</name>
        <briefdescription>
<para>the admin window of the app </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="260" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8c_1aedaaa3f425adc8ef27426e9ecbf63d29" prot="public" static="no">
        <type>struct <ref refid="structreview_window" kindref="compound">reviewWindow</ref></type>
        <definition>typedef struct reviewWindow ReviewWindow</definition>
        <argsstring></argsstring>
        <name>ReviewWindow</name>
        <briefdescription>
<para>the review Window of the app </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="273" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8c_1a0667ea4347c9b9d6c5692361185eab3a" prot="public" static="no">
        <type>struct <ref refid="structcustomer_window" kindref="compound">customerWindow</ref></type>
        <definition>typedef struct customerWindow CustomerWindow</definition>
        <argsstring></argsstring>
        <name>CustomerWindow</name>
        <briefdescription>
<para>the customer window of the app </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="288" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="main_8c_1a7afb31fe444397deb0375c093030682d" prot="public" static="no">
        <type>struct <ref refid="structapp" kindref="compound">app</ref></type>
        <definition>typedef struct app App</definition>
        <argsstring></argsstring>
        <name>App</name>
        <briefdescription>
<para>the main struct containing all app info that we need </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="308" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="main_8c_1a44287a1e2179ad86ebd481121eafb1f3" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char DEFAULT_REVIEW_HEADERS[NUMBER_OF_REVIEW_CATS][STRING_SIZE]</definition>
        <argsstring>[NUMBER_OF_REVIEW_CATS][STRING_SIZE]</argsstring>
        <name>DEFAULT_REVIEW_HEADERS</name>
        <initializer>= {&quot;Happiness&quot;, &quot;Cleanliness&quot;, &quot;Saftey&quot;, &quot;Location&quot;, &quot;Amenities&quot;}</initializer>
        <briefdescription>
<para>the default review headers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="82" column="12" bodyfile="main.c" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a539ad50b7780b0efc81c9b85f7e8df2b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char DEFAULT_NAME[STRING_SIZE]</definition>
        <argsstring>[STRING_SIZE]</argsstring>
        <name>DEFAULT_NAME</name>
        <initializer>= &quot;AIR UCCS&quot;</initializer>
        <briefdescription>
<para>the default property name </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="86" column="12" bodyfile="main.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a2af4ca44f722cc3b4b00a68b851b9e4d" prot="public" static="no" mutable="no">
        <type>int unsigned const</type>
        <definition>int unsigned const DEFAULT_MIN_RENTAL_NIGHTS</definition>
        <argsstring></argsstring>
        <name>DEFAULT_MIN_RENTAL_NIGHTS</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>the default minimum nights </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="90" column="20" bodyfile="main.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a139936736b1fed8ce48a58629647dcc0" prot="public" static="no" mutable="no">
        <type>unsigned int const</type>
        <definition>unsigned int const DEFAULT_MAX_RENTAL_NIGHTS</definition>
        <argsstring></argsstring>
        <name>DEFAULT_MAX_RENTAL_NIGHTS</name>
        <initializer>= 14</initializer>
        <briefdescription>
<para>the default maximum nights </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="94" column="20" bodyfile="main.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1abaed5313319821e00c971ca48e071fcf" prot="public" static="no" mutable="no">
        <type>unsigned int const</type>
        <definition>unsigned int const DEFAULT_INTERVAL_1_NIGHTS</definition>
        <argsstring></argsstring>
        <name>DEFAULT_INTERVAL_1_NIGHTS</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>the default interval that the first discount starts at </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="98" column="20" bodyfile="main.c" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a33b4fb08407f315f236d0b93b39da793" prot="public" static="no" mutable="no">
        <type>unsigned int const</type>
        <definition>unsigned int const DEFAULT_INTERVAL_2_NIGHTS</definition>
        <argsstring></argsstring>
        <name>DEFAULT_INTERVAL_2_NIGHTS</name>
        <initializer>= 6</initializer>
        <briefdescription>
<para>the default interval that the second discount starts at </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="102" column="20" bodyfile="main.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1abe3a8709ba5ff2e63b69fce41c24a0d0" prot="public" static="no" mutable="no">
        <type>double const</type>
        <definition>double const DEFAULT_RENTAL_RATE</definition>
        <argsstring></argsstring>
        <name>DEFAULT_RENTAL_RATE</name>
        <initializer>= 400</initializer>
        <briefdescription>
<para>the default cost per night </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="106" column="14" bodyfile="main.c" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a9cfdaa0c3a5488cbcb8e9cb738e19146" prot="public" static="no" mutable="no">
        <type>double const</type>
        <definition>double const DEFAULT_DISCOUNT</definition>
        <argsstring></argsstring>
        <name>DEFAULT_DISCOUNT</name>
        <initializer>= 50</initializer>
        <briefdescription>
<para>the default base discount before range multiplyers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="110" column="14" bodyfile="main.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a5c96b971fedeb5955e05256b7e58e74e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_DAY_RANGES[NUMBER_OF_PRICE_RANGES]</definition>
        <argsstring>[NUMBER_OF_PRICE_RANGES]</argsstring>
        <name>DEFAULT_DAY_RANGES</name>
        <initializer>= {0, <ref refid="main_8c_1abaed5313319821e00c971ca48e071fcf" kindref="member">DEFAULT_INTERVAL_1_NIGHTS</ref>, <ref refid="main_8c_1a33b4fb08407f315f236d0b93b39da793" kindref="member">DEFAULT_INTERVAL_2_NIGHTS</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="111" column="11" bodyfile="main.c" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1aa00256dbd2d2a34973cbaf5a254504b1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_DISCOUNTS[NUMBER_OF_PRICE_RANGES]</definition>
        <argsstring>[NUMBER_OF_PRICE_RANGES]</argsstring>
        <name>DEFAULT_DISCOUNTS</name>
        <initializer>= {0, <ref refid="main_8c_1a9cfdaa0c3a5488cbcb8e9cb738e19146" kindref="member">DEFAULT_DISCOUNT</ref>, <ref refid="main_8c_1a9cfdaa0c3a5488cbcb8e9cb738e19146" kindref="member">DEFAULT_DISCOUNT</ref>*2}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="112" column="11" bodyfile="main.c" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1aacb3b7f85948a76fa11df31c02e98fc8" prot="public" static="no" mutable="no">
        <type>GtkWidget *</type>
        <definition>GtkWidget* windows[NumTabs]</definition>
        <argsstring>[NumTabs]</argsstring>
        <name>windows</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="747" column="12" bodyfile="main.c" bodystart="747" bodyend="747"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a6c5820a0ceef740c20441d04df24950a" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* names[NumTabs]</definition>
        <argsstring>[NumTabs]</argsstring>
        <name>names</name>
        <initializer>=  {&quot;Main&quot;, &quot;Analytics&quot;, &quot;Login&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="748" column="7" bodyfile="main.c" bodystart="748" bodyend="748"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="main_8c_1a2a6b9e4ccbf60333a474b7433b21d19f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_LL_OF_TYPE_ARR_WITH_SIZE</definition>
        <argsstring>(int, NUMBER_OF_REVIEW_CATS, ReviewNode, reviewNode)</argsstring>
        <name>DEFINE_LL_OF_TYPE_ARR_WITH_SIZE</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref></type>
        </param>
        <param>
          <type>ReviewNode</type>
        </param>
        <param>
          <type>reviewNode</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="119" column="1" declfile="main.c" declline="119" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a73b13b5e2d9bcacf35a4369a9270c43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initLocation</definition>
        <argsstring>(Location *loc, char address[STRING_SIZE], int lat, int lon)</argsstring>
        <name>initLocation</name>
        <param>
          <type><ref refid="main_8c_1a5f2225f46c54d4268143a3e9586f67a4" kindref="member">Location</ref> *</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>char</type>
          <declname>address</declname>
          <array>[STRING_SIZE]</array>
        </param>
        <param>
          <type>int</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lon</declname>
        </param>
        <briefdescription>
<para>an initalizer for a new location struct. Initalizes an existing Location with good data </para>
        </briefdescription>
        <detaileddescription>
<para>Initalize a location structure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>the location struct pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>the adress of the location </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lat</parametername>
</parameternamelist>
<parameterdescription>
<para>the int latitude </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lon</parametername>
</parameternamelist>
<parameterdescription>
<para>the int longitude</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>the location struct to init </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>the adress in the form of a string of the location </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lat</parametername>
</parameternamelist>
<parameterdescription>
<para>the latitude of the location </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lon</parametername>
</parameternamelist>
<parameterdescription>
<para>the longitude of the location </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="139" column="6" bodyfile="main.c" bodystart="139" bodyend="144" declfile="main.c" declline="332" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a579214ebbaa002f5dd7d119bc64ac24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initProperty</definition>
        <argsstring>(Property *property)</argsstring>
        <name>initProperty</name>
        <param>
          <type><ref refid="main_8c_1af6ffa2d6fd1c39d309a4465a1ce7af87" kindref="member">Property</ref> *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Initalize a property with default values. </para>
        </briefdescription>
        <detaileddescription>
<para>Initalzize a property with default values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>the propertyPtr to initalize onto</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>the property struct to initalize </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="181" column="6" bodyfile="main.c" bodystart="181" bodyend="192" declfile="main.c" declline="325" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1acb547fc473a45efe1612cf333ec2b0a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cleanUpReviews</definition>
        <argsstring>(Property *propertyPtr)</argsstring>
        <name>cleanUpReviews</name>
        <param>
          <type><ref refid="main_8c_1af6ffa2d6fd1c39d309a4465a1ce7af87" kindref="member">Property</ref> *</type>
          <declname>propertyPtr</declname>
        </param>
        <briefdescription>
<para>A method for quickly cleaning up the linked list of the property reviews. </para>
        </briefdescription>
        <detaileddescription>
<para>free all memory held by review ll</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>propertyPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>the property to cleanup</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>propertyPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>the property </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="196" column="6" bodyfile="main.c" bodystart="196" bodyend="210" declfile="main.c" declline="316" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1af34961ca790e86a4ed67c0362924a260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addReview</definition>
        <argsstring>(App *mainApp, const int review[NUMBER_OF_REVIEW_CATS])</argsstring>
        <name>addReview</name>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>mainApp</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>review</declname>
          <array>[NUMBER_OF_REVIEW_CATS]</array>
        </param>
        <briefdescription>
<para>Add a review to the linked list of reviews. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>the property to add the review to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>review</parametername>
</parameternamelist>
<parameterdescription>
<para>the review to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="509" column="6" bodyfile="main.c" bodystart="509" bodyend="538" declfile="main.c" declline="321" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ae379a5581cee8b7388a8d48b391a8d59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void updateAdminInputs</definition>
        <argsstring>(App *mainApp)</argsstring>
        <name>updateAdminInputs</name>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>mainApp</declname>
        </param>
        <briefdescription>
<para>update all entrys on the admin app page </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mainApp</parametername>
</parameternamelist>
<parameterdescription>
<para>the main app struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1145" column="13" bodyfile="main.c" bodystart="1145" bodyend="1178" declfile="main.c" declline="336" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ab9e636ad749a158db97c594fe5dcb182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getValidIntInputWithSentinels</definition>
        <argsstring>(char const PROMPT[], int min, int max, int const SENTINEL_VALUES[], size_t length)</argsstring>
        <name>getValidIntInputWithSentinels</name>
        <param>
          <type>char const</type>
          <declname>PROMPT</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>SENTINEL_VALUES</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Get a int that is either within [min-max] or in a list of sentinel values, from the user, prompting them with the prompt passed into this function and displaying the err prompt if they enter an invalid input. </para>
        </briefdescription>
        <detaileddescription>
<para>@Author MattieFM</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prompt</parametername>
</parameternamelist>
<parameterdescription>
<para>{char[]} a string like array of chars to display to the user as a prompt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>{char[]} a string like array to display to the user when they enter an invalid value, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minAsciiCode</parametername>
</parameternamelist>
<parameterdescription>
<para>{signed int} the lowest ascii code allowed to be entered </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxAsciiCode</parametername>
</parameternamelist>
<parameterdescription>
<para>{signed int} the highest ascii code allowed to be entered </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sentinelValues</parametername>
</parameternamelist>
<parameterdescription>
<para>{signed int[]} an array of explicitly allowed ascii codes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
<parametername>{size_t}</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the sentinel_values array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a signed int between [min-max] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="634" column="5" bodyfile="main.c" bodystart="634" bodyend="666" declfile="main.c" declline="357" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aa136ea4239d59d6fdcf01a88db908497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double calculateDiscount</definition>
        <argsstring>(int night, int const DISCOUNT_RANGES[], double const DISCOUNTS[], size_t length)</argsstring>
        <name>calculateDiscount</name>
        <param>
          <type>int</type>
          <declname>night</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>DISCOUNT_RANGES</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>DISCOUNTS</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>A function that will calculate the discount of a day. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>night</parametername>
</parameternamelist>
<parameterdescription>
<para>{int} the night to find the discount of </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discountRanges[]</parametername>
</parameternamelist>
<parameterdescription>
<para>{int[]) an array of ints in the format [discountRange1Start,discountRange1End,DiscountRange2End,...) where the start of each range after 1 is the end of the last </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discounts[]</parametername>
</parameternamelist>
<parameterdescription>
<para>{floats} an array of the discounts for each range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
<parametername>{size_t}</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of both the discountRRanges and discounts array, they must be same length</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double, a dollar amount of the discount for this night </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="687" column="8" bodyfile="main.c" bodystart="687" bodyend="712" declfile="main.c" declline="370" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a85bdc4d907ddea25da7b38f61eb95ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double calculateCost</definition>
        <argsstring>(int nights, double basePrice, int const DISCOUNT_RANGES[], double const DISCOUNTS[], size_t length)</argsstring>
        <name>calculateCost</name>
        <param>
          <type>int</type>
          <declname>nights</declname>
        </param>
        <param>
          <type>double</type>
          <declname>basePrice</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>DISCOUNT_RANGES</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>DISCOUNTS</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>A function to calculate the cost of a stay in a AirUCCS rented building. Cost is based on nights stayed, the base price per night and the discounts applied. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nights</parametername>
</parameternamelist>
<parameterdescription>
<para>{int} how many nights the user has stayed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basePrice</parametername>
</parameternamelist>
<parameterdescription>
<para>{float} the base price per night before any discounts are applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discountRanges[]</parametername>
</parameternamelist>
<parameterdescription>
<para>{int[]) an array of ints in the format [discountRange1Start,discountRange1End,DiscountRange2End,...) where the start of each range after 1 is the end of the last </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discounts[]</parametername>
</parameternamelist>
<parameterdescription>
<para>{floats} an array of the discounts for each range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
<parametername>{size_t}</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of both the discountRRanges and discounts array, they must be same length</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>{double} a double value representing how much the stay would cost. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="714" column="8" bodyfile="main.c" bodystart="714" bodyend="726" declfile="main.c" declline="384" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1af930487fde31f5b0bfa65a3b0b1bdbfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void displayCost</definition>
        <argsstring>(int nights, double cost)</argsstring>
        <name>displayCost</name>
        <param>
          <type>int</type>
          <declname>nights</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cost</declname>
        </param>
        <briefdescription>
<para>A function to display how much the user&apos;s stay cost in a user friendly way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nights</parametername>
</parameternamelist>
<parameterdescription>
<para>{int} how many nights the user has stayed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cost</parametername>
</parameternamelist>
<parameterdescription>
<para>{double} the total cost of the user&apos;s stay</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing, prints info to the console for the user. in the format: Nights Charge 5 $nnnn.nn </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="728" column="6" bodyfile="main.c" bodystart="728" bodyend="734" declfile="main.c" declline="398" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a49be7264a1719899398ed267e69188d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chargeUser</definition>
        <argsstring>(char const uuid[], float cost, char const cardNum[])</argsstring>
        <name>chargeUser</name>
        <param>
          <type>char const</type>
          <declname>uuid</declname>
          <array>[]</array>
        </param>
        <param>
          <type>float</type>
          <declname>cost</declname>
        </param>
        <param>
          <type>char const</type>
          <declname>cardNum</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>a method that would charge the user money for their stay. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uuid</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the user&apos;s stay </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cost</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>total cost to charge them </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cardNum</parametername>
</parameternamelist>
<parameterdescription>
<para>the card to charge the cost to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="407" column="6" declfile="main.c" declline="407" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad0b5b543d8690bb4ddefc6b64428f7eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool getBooking</definition>
        <argsstring>(int *valuePt, int const SENTINELS[], int min, int max, size_t length)</argsstring>
        <name>getBooking</name>
        <param>
          <type>int *</type>
          <declname>valuePt</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>SENTINELS</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>A function that will start the process of booking a room. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>valuePt</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a variable to store the value the user entered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sentinels[]</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of sentinel values that are allowed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>min value for nights allowed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>max value for nights allowed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
<parametername>{size_t}</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the sentinel_values array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool, this will return true if the user has made a valid booking and false if they have entered a sentinel value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="610" column="6" bodyfile="main.c" bodystart="610" bodyend="624" declfile="main.c" declline="421" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a7eedf911c331de9894b62bdc926a0b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool intArrContains</definition>
        <argsstring>(int const ARR[], int val, size_t length)</argsstring>
        <name>intArrContains</name>
        <param>
          <type>int const</type>
          <declname>ARR</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>check if an array of ints contains a value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ARR[]</parametername>
</parameternamelist>
<parameterdescription>
<para>the array to look through </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to check for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
<parametername>{size_t}</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool, true if value is in arr false if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="599" column="6" bodyfile="main.c" bodystart="599" bodyend="608" declfile="main.c" declline="433" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a2fd4dc35b8b9778a29fc386d0829cda9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void displayRentalPropertyInfo</definition>
        <argsstring>(int min, int max, double basePrice, int const DISCOUNT_RANGES[], double const DISCOUNTS[], size_t length)</argsstring>
        <name>displayRentalPropertyInfo</name>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>basePrice</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>DISCOUNT_RANGES</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>DISCOUNTS</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>display the rental property info to the user before they are prompted to make a perchance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum number of nights a user can stay </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of nights a user can stay </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basePrice</parametername>
</parameternamelist>
<parameterdescription>
<para>the base price per night of the property </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DISCOUNT_RANGES[]</parametername>
</parameternamelist>
<parameterdescription>
<para>{int[]) an array of ints in the format [discountRange1Start,discountRange1End,DiscountRange2End,...) where the start of each range after 1 is the end of the last </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DISCOUNTS[]</parametername>
</parameternamelist>
<parameterdescription>
<para>{double[]} an array of the discounts for each range, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
<parametername>{size_t}</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of both the discountRRanges and discounts array, they must be same length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="669" column="6" bodyfile="main.c" bodystart="669" bodyend="685" declfile="main.c" declline="446" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad7cb38bbd478918aa8706cb4fdd1665f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void loginWindowInit</definition>
        <argsstring>(GtkApplication *app, App *mainApp)</argsstring>
        <name>loginWindowInit</name>
        <param>
          <type>GtkApplication *</type>
          <declname>app</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>mainApp</declname>
        </param>
        <briefdescription>
<para>initialize the login window &quot;object-like&quot; but do not spawn it into the current scene </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mainWindow</parametername>
</parameternamelist>
<parameterdescription>
<para>a GtkWidget pointer to initialize the mainWindow body onto </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>the main gtk app. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1113" column="13" bodyfile="main.c" bodystart="1113" bodyend="1143" declfile="main.c" declline="454" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a2eb80223273d88428f6e32c89c5fa43b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reviewWindowInit</definition>
        <argsstring>(GtkApplication *app, App *mainApp)</argsstring>
        <name>reviewWindowInit</name>
        <param>
          <type>GtkApplication *</type>
          <declname>app</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>mainApp</declname>
        </param>
        <briefdescription>
<para>setup the review window </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>the app </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mainApp</parametername>
</parameternamelist>
<parameterdescription>
<para>the main app <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1081" column="13" bodyfile="main.c" bodystart="1081" bodyend="1111" declfile="main.c" declline="459" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a9ee95d0f9c5cf3aafd0aa8a884fda2b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GtkWidget *</type>
        <definition>static GtkWidget * makeBtnWithCb</definition>
        <argsstring>(char *label, void(*cb)(GtkWidget *widget, gpointer data))</argsstring>
        <name>makeBtnWithCb</name>
        <param>
          <type>char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>void(*)(GtkWidget *widget, gpointer data)</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>make a button with a callback when it is clicked </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to display on this button </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>function pointer to the function to call on this clicked. this function must take a gtk widget and the data pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="750" column="19" bodyfile="main.c" bodystart="750" bodyend="755" declfile="main.c" declline="466" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1af3816e05ba3a31e4a28e7592f87f6486" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GtkWidget *</type>
        <definition>static GtkWidget * TabHeaders</definition>
        <argsstring>(void)</argsstring>
        <name>TabHeaders</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>the class of our tab headers widget that handles switching between tabs within the app </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="774" column="19" bodyfile="main.c" bodystart="774" bodyend="784" declfile="main.c" declline="471" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aaeb868af8347698819f4dc75db19c53c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mainWindowUpdateReviews</definition>
        <argsstring>(App *mainApp)</argsstring>
        <name>mainWindowUpdateReviews</name>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>mainApp</declname>
        </param>
        <briefdescription>
<para>update the customer window display of reviews </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="916" column="13" bodyfile="main.c" bodystart="916" bodyend="922" declfile="main.c" declline="474" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a07025dc4a6f38c6b5f8a1072a13bb34a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void onChange</definition>
        <argsstring>(GtkWidget *widget, App *app)</argsstring>
        <name>onChange</name>
        <param>
          <type>GtkWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>this is called when the input box for nights changes its value. to show a preview of the pice </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>the widget this was called from IE: the entry </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to our app struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="875" column="13" bodyfile="main.c" bodystart="875" bodyend="888" declfile="main.c" declline="479" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a2875f745d129a0647f428c34f8f1abc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void onChangeValidateRangeOfReview</definition>
        <argsstring>(GtkWidget *widget, App *app)</argsstring>
        <name>onChangeValidateRangeOfReview</name>
        <param>
          <type>GtkWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>this is called when the input box for any entry is edited, it ensures the value is within the min/max value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>the widget this was called from IE: the entry </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to our app struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1045" column="13" bodyfile="main.c" bodystart="1045" bodyend="1079" declfile="main.c" declline="484" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a83aea335c1f2fa19db792f3ab8f60d03" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GtkWidget *</type>
        <definition>static GtkWidget * makeHtmlStyleLabelWithLabel</definition>
        <argsstring>(char *headerText, char *displayText)</argsstring>
        <name>makeHtmlStyleLabelWithLabel</name>
        <param>
          <type>char *</type>
          <declname>headerText</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>displayText</declname>
        </param>
        <briefdescription>
<para>create a display that looks like Header: text </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>headerText</parametername>
</parameternamelist>
<parameterdescription>
<para>the header text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayText</parametername>
</parameternamelist>
<parameterdescription>
<para>the display text </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the widget </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="804" column="19" bodyfile="main.c" bodystart="804" bodyend="816" declfile="main.c" declline="490" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad54d52e4f4952ec53742a47fbccedcce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void onCharge</definition>
        <argsstring>(GtkWidget *widget, App *app)</argsstring>
        <name>onCharge</name>
        <param>
          <type>GtkWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>the method that will be called to process a charge when the user clicks the pay button </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>the input button this was called from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to our main app struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="890" column="13" bodyfile="main.c" bodystart="890" bodyend="914" declfile="main.c" declline="495" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a00920ba3ffe9d4d1410c31175eb259bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GtkWidget *</type>
        <definition>static GtkWidget * makeGridOfLabelsFromHeadersAndLinkedList</definition>
        <argsstring>(char headers[NUMBER_OF_REVIEW_CATS][STRING_SIZE], ReviewNode *head)</argsstring>
        <name>makeGridOfLabelsFromHeadersAndLinkedList</name>
        <param>
          <type>char</type>
          <declname>headers</declname>
          <array>[NUMBER_OF_REVIEW_CATS][STRING_SIZE]</array>
        </param>
        <param>
          <type>ReviewNode *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>render a 2d array of strings as labels in a grid </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>2d string array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>the rows in the array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>the cols in the array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the widget </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="818" column="19" bodyfile="main.c" bodystart="818" bodyend="856" declfile="main.c" declline="502" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1abef81d57e41bf73d65df4ef6652cea7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cliMain</definition>
        <argsstring>(void)</argsstring>
        <name>cliMain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>the main function for the program that will handle initialization/entry. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>MattieFM </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="544" column="5" bodyfile="main.c" bodystart="544" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a400036319c87521708cac2d1599995c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void switchWin</definition>
        <argsstring>(GtkWidget *widget, gpointer data)</argsstring>
        <name>switchWin</name>
        <param>
          <type>GtkWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type>gpointer</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="757" column="13" bodyfile="main.c" bodystart="757" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a7361cb7f130f3688e8fbe933d285a18b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GtkWidget *</type>
        <definition>static GtkWidget * makeHtmlStyleEntryWithLabel</definition>
        <argsstring>(char *displayText)</argsstring>
        <name>makeHtmlStyleEntryWithLabel</name>
        <param>
          <type>char *</type>
          <declname>displayText</declname>
        </param>
        <briefdescription>
<para>create a display that looks like Header: input field </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayText</parametername>
</parameternamelist>
<parameterdescription>
<para>the header text </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the widget </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="790" column="19" bodyfile="main.c" bodystart="790" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ae22daded04129238cf61daaecaa45d9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GtkWidget *</type>
        <definition>static GtkWidget * windowBase</definition>
        <argsstring>(GtkApplication *app)</argsstring>
        <name>windowBase</name>
        <param>
          <type>GtkApplication *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>the base for every window of the app, defines all common elements such as teh tabs bar at the top </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>the gtkWidget grid child </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="862" column="19" bodyfile="main.c" bodystart="862" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad878e41a136921e7355db8333be2e443" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mainWindowInit</definition>
        <argsstring>(GtkApplication *app, App *mainApp)</argsstring>
        <name>mainWindowInit</name>
        <param>
          <type>GtkApplication *</type>
          <declname>app</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>mainApp</declname>
        </param>
        <briefdescription>
<para>initialize the main window &quot;object-like&quot; but do not spawn it into the current scene </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mainWindow</parametername>
</parameternamelist>
<parameterdescription>
<para>a GtkWidget pointer to initialize the mainWindow body onto </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>the main gtk app. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="929" column="13" bodyfile="main.c" bodystart="929" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a55a167266e07914aca5232a51ed9ccaf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void onLogin</definition>
        <argsstring>(GtkWidget *widget, App *app)</argsstring>
        <name>onLogin</name>
        <param>
          <type>GtkWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
<para>the method called when the login button is pressed </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>the login button </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mainapp struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="993" column="13" bodyfile="main.c" bodystart="993" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aea911ea17f37628f0934476b1b6e7641" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void onClick</definition>
        <argsstring>(GtkWidget *widget, App *mainApp)</argsstring>
        <name>onClick</name>
        <param>
          <type>GtkWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>mainApp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1020" column="13" bodyfile="main.c" bodystart="1020" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a15e24f9376b617094f0ecc99cb8a2ad6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void adminWindowInit</definition>
        <argsstring>(GtkApplication *app, App *mainApp)</argsstring>
        <name>adminWindowInit</name>
        <param>
          <type>GtkApplication *</type>
          <declname>app</declname>
        </param>
        <param>
          <type><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref> *</type>
          <declname>mainApp</declname>
        </param>
        <briefdescription>
<para>initialize the main window &quot;object-like&quot; but do not spawn it into the current scene </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mainWindow</parametername>
</parameternamelist>
<parameterdescription>
<para>a GtkWidget pointer to initialize the mainWindow body onto </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>the main gtk app. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1186" column="13" bodyfile="main.c" bodystart="1186" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ac8d185b1db8b0153f14fd5cb4537cf2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void activate</definition>
        <argsstring>(GtkApplication *app, gpointer user_data)</argsstring>
        <name>activate</name>
        <param>
          <type>GtkApplication *</type>
          <declname>app</declname>
        </param>
        <param>
          <type>gpointer</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1235" column="1" bodyfile="main.c" bodystart="1235" bodyend="1261"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1264" column="1" bodyfile="main.c" bodystart="1264" bodyend="1278"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aecb3b10f315423f9de2e0c640a6f2d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long</type>
        <definition>unsigned long long nBitRandom</definition>
        <argsstring>(int numberOfBits)</argsstring>
        <name>nBitRandom</name>
        <param>
          <type>int</type>
          <declname>numberOfBits</declname>
        </param>
        <briefdescription>
<para>generate a random integer of n bits </para>
        </briefdescription>
        <detaileddescription>
<para>====================== </para>
<sect1 id="main_8c_1autotoc_md5">
<title>Prototypes</title>
<para>====================== </para>
</sect1>
<sect1 id="main_8c_1autotoc_md6">
<title>Functions</title>
</sect1>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="1340" column="20" bodyfile="main.c" bodystart="1340" bodyend="1349" declfile="main.c" declline="1333" declcolumn="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>Air<sp/>UCCS<sp/>backend<sp/>code</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>Includes</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtk/gtk.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//Preprocessor<sp/>constants</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor">#define<sp/>NUMBER_OF_PRICE_RANGES<sp/>3</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUMBER_OF_REVIEW_CATS<sp/>5</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRING_SIZE<sp/>80</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BASE_DISCOUNT<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADD_MOCK_REVIEWS<sp/>1</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_REVIEW<sp/>5</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_REVIEW<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_LL_OF_TYPE_ARR_WITH_SIZE(TYPE,<sp/>size,<sp/>typeName,<sp/>structName)<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor">typedef<sp/>struct<sp/>structName<sp/>{\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>struct<sp/>structName<sp/>*<sp/>next;\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/>TYPE<sp/>data[size];\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor">}<sp/>typeName;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//TODO:<sp/>refactor<sp/>to<sp/>use<sp/>files<sp/>for<sp/>these</highlight></codeline>
<codeline lineno="82"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a44287a1e2179ad86ebd481121eafb1f3" kindref="member">DEFAULT_REVIEW_HEADERS</ref>[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>][<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Happiness&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cleanliness&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Saftey&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Location&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Amenities&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a539ad50b7780b0efc81c9b85f7e8df2b" kindref="member">DEFAULT_NAME</ref>[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AIR<sp/>UCCS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a2af4ca44f722cc3b4b00a68b851b9e4d" kindref="member">DEFAULT_MIN_RENTAL_NIGHTS</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a139936736b1fed8ce48a58629647dcc0" kindref="member">DEFAULT_MAX_RENTAL_NIGHTS</ref><sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8c_1abaed5313319821e00c971ca48e071fcf" kindref="member">DEFAULT_INTERVAL_1_NIGHTS</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a33b4fb08407f315f236d0b93b39da793" kindref="member">DEFAULT_INTERVAL_2_NIGHTS</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8c_1abe3a8709ba5ff2e63b69fce41c24a0d0" kindref="member">DEFAULT_RENTAL_RATE</ref><sp/>=<sp/>400;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a9cfdaa0c3a5488cbcb8e9cb738e19146" kindref="member">DEFAULT_DISCOUNT</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a5c96b971fedeb5955e05256b7e58e74e" kindref="member">DEFAULT_DAY_RANGES</ref>[<ref refid="main_8c_1a71147341558d2823036988bfc0e6575d" kindref="member">NUMBER_OF_PRICE_RANGES</ref>]<sp/>=<sp/>{0,<sp/><ref refid="main_8c_1abaed5313319821e00c971ca48e071fcf" kindref="member">DEFAULT_INTERVAL_1_NIGHTS</ref>,<sp/><ref refid="main_8c_1a33b4fb08407f315f236d0b93b39da793" kindref="member">DEFAULT_INTERVAL_2_NIGHTS</ref><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aa00256dbd2d2a34973cbaf5a254504b1" kindref="member">DEFAULT_DISCOUNTS</ref>[<ref refid="main_8c_1a71147341558d2823036988bfc0e6575d" kindref="member">NUMBER_OF_PRICE_RANGES</ref>]<sp/>=<sp/>{0,<sp/><ref refid="main_8c_1a9cfdaa0c3a5488cbcb8e9cb738e19146" kindref="member">DEFAULT_DISCOUNT</ref>,<sp/><ref refid="main_8c_1a9cfdaa0c3a5488cbcb8e9cb738e19146" kindref="member">DEFAULT_DISCOUNT</ref>*2};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------</highlight></codeline>
<codeline lineno="116"><highlight class="comment">Structs</highlight></codeline>
<codeline lineno="117"><highlight class="comment">-----------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//use<sp/>macro<sp/>to<sp/>setup<sp/>linked<sp/>list<sp/>with<sp/>type<sp/>of<sp/>int<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="main_8c_1a72242c2e53086385d9d5dd3aadcdfa5b" kindref="member">DEFINE_LL_OF_TYPE_ARR_WITH_SIZE</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>,<sp/>ReviewNode,<sp/>reviewNode);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structlocation" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlocation" kindref="compound">location</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@description<sp/>the<sp/>human<sp/>readable<sp/>address<sp/>of<sp/>this<sp/>location*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structlocation_1a5d8c42e48a8672b45cf5e69b1cd58639" kindref="member">address</ref>[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>];<sp/></highlight><highlight class="comment">//(80<sp/>size<sp/>as<sp/>told<sp/>for<sp/>all<sp/>strings)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@description<sp/>the<sp/>latitude<sp/>of<sp/>this<sp/>location*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlocation_1ad0c6d3a40d6093204d169a1928ec7fa5" kindref="member">lat</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@description<sp/>the<sp/>longitude<sp/>of<sp/>this<sp/>location*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlocation_1ada0aef770ee20058d486028df44cf5d0" kindref="member">lon</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><ref refid="main_8c_1a5f2225f46c54d4268143a3e9586f67a4" kindref="member">Location</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a73b13b5e2d9bcacf35a4369a9270c43f" kindref="member">initLocation</ref>(<ref refid="structlocation" kindref="compound">Location</ref><sp/>*<sp/>loc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>address[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lon){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//copy<sp/>adress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>strcpy(loc-&gt;<ref refid="structlocation_1a5d8c42e48a8672b45cf5e69b1cd58639" kindref="member">address</ref>,<sp/>address);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>loc-&gt;<ref refid="structlocation_1ad0c6d3a40d6093204d169a1928ec7fa5" kindref="member">lat</ref><sp/>=<sp/>lat;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>loc-&gt;<ref refid="structlocation_1ada0aef770ee20058d486028df44cf5d0" kindref="member">lon</ref><sp/>=<sp/>lon;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structproperty" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structproperty" kindref="compound">property</ref><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//--Property<sp/>Info-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@description<sp/>the<sp/>name<sp/>of<sp/>this<sp/>property<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structproperty_1a191b09831ce959fea615beb6f2b609d3" kindref="member">propertyName</ref>[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>];<sp/></highlight><highlight class="comment">//(80<sp/>size<sp/>as<sp/>told<sp/>for<sp/>all<sp/>strings)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@description<sp/>the<sp/>location<sp/>of<sp/>this<sp/>property*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlocation" kindref="compound">Location</ref><sp/><ref refid="structproperty_1a260defa82d536dcea2aa22452b862110" kindref="member">location</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//--Discounts--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-ranges-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@description<sp/>the<sp/>number<sp/>of<sp/>days<sp/>when<sp/>the<sp/>first<sp/>discount<sp/>period<sp/>should<sp/>start<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structproperty_1ac25840037114824712a266b5827a4f37" kindref="member">dayRanges</ref>[<ref refid="main_8c_1a71147341558d2823036988bfc0e6575d" kindref="member">NUMBER_OF_PRICE_RANGES</ref>];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structproperty_1a78cfc4adb15fb15e26a8bee390778e7a" kindref="member">discounts</ref>[<ref refid="main_8c_1a71147341558d2823036988bfc0e6575d" kindref="member">NUMBER_OF_PRICE_RANGES</ref>];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-discount<sp/>values-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@description<sp/>the<sp/>base<sp/>discount<sp/>for<sp/>range<sp/>1.<sp/>This<sp/>value<sp/>is<sp/>multiplied<sp/>by<sp/>the<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structproperty_1a7b621736f2a57bb77067f9ef4d8798c2" kindref="member">baseDiscount</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structproperty_1a36c611bac2391f464098144cfdfd95d0" kindref="member">totalMoney</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structproperty_1a85d4797ede393d7546c32bf2e3f18196" kindref="member">totalNights</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>ReviewNode<sp/>*<sp/><ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structproperty_1af08531d2b1e2a3c0dff557786a09341d" kindref="member">headers</ref>[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>][<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>]<sp/>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><ref refid="main_8c_1af6ffa2d6fd1c39d309a4465a1ce7af87" kindref="member">Property</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a579214ebbaa002f5dd7d119bc64ac24d" kindref="member">initProperty</ref>(<ref refid="structproperty" kindref="compound">Property</ref><sp/>*<sp/><ref refid="structproperty" kindref="compound">property</ref>){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal">-&gt;<ref refid="structproperty_1a7b621736f2a57bb77067f9ef4d8798c2" kindref="member">baseDiscount</ref><sp/>=<sp/><ref refid="main_8c_1a74abd28f848a5dc45616674ac761f00d" kindref="member">BASE_DISCOUNT</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>memcpy(&amp;<ref refid="structproperty" kindref="compound">property</ref>-&gt;<ref refid="structproperty_1ac25840037114824712a266b5827a4f37" kindref="member">dayRanges</ref>,<sp/>&amp;<ref refid="main_8c_1a5c96b971fedeb5955e05256b7e58e74e" kindref="member">DEFAULT_DAY_RANGES</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8c_1a5c96b971fedeb5955e05256b7e58e74e" kindref="member">DEFAULT_DAY_RANGES</ref>));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>memcpy(&amp;<ref refid="structproperty" kindref="compound">property</ref>-&gt;<ref refid="structproperty_1a78cfc4adb15fb15e26a8bee390778e7a" kindref="member">discounts</ref>,<sp/>&amp;<ref refid="main_8c_1aa00256dbd2d2a34973cbaf5a254504b1" kindref="member">DEFAULT_DISCOUNTS</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8c_1aa00256dbd2d2a34973cbaf5a254504b1" kindref="member">DEFAULT_DISCOUNTS</ref>));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>memcpy(&amp;<ref refid="structproperty" kindref="compound">property</ref>-&gt;<ref refid="structproperty_1af08531d2b1e2a3c0dff557786a09341d" kindref="member">headers</ref>,<sp/>&amp;<ref refid="main_8c_1a44287a1e2179ad86ebd481121eafb1f3" kindref="member">DEFAULT_REVIEW_HEADERS</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8c_1a44287a1e2179ad86ebd481121eafb1f3" kindref="member">DEFAULT_REVIEW_HEADERS</ref>));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal">-&gt;totalMoney<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal">-&gt;totalNights<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>ReviewNode<sp/>*<sp/>nodePtr<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ReviewNode));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>nodePtr-&gt;next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>nodePtr-&gt;data[0]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal">-&gt;reviewsHead<sp/>=<sp/>nodePtr;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1acb547fc473a45efe1612cf333ec2b0a1" kindref="member">cleanUpReviews</ref>(<ref refid="structproperty" kindref="compound">Property</ref><sp/>*<sp/>propertyPtr){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(propertyPtr-&gt;<ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref>-&gt;next<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ReviewNode<sp/>*<sp/>currentPtr<sp/>=<sp/>propertyPtr-&gt;<ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//traverse<sp/>to<sp/>one<sp/>away<sp/>from<sp/>end<sp/>of<sp/>ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(currentPtr-&gt;next-&gt;next<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentPtr<sp/>=<sp/>currentPtr-&gt;next;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//free<sp/>the<sp/>memory<sp/>of<sp/>the<sp/>next<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>free(currentPtr-&gt;next);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>currentPtr-&gt;next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INHERIT_BASE_WIN<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/>GtkWidget*<sp/>window;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structlog_in_window" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlog_in_window" kindref="compound">logInWindow</ref><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&quot;inherit&quot;<sp/>from<sp/>our<sp/>base<sp/>win<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aa95cc25626aaea9a264528de81ad3c09" kindref="member">INHERIT_BASE_WIN</ref></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//both<sp/>of<sp/>these<sp/>are<sp/>temp<sp/>for<sp/>testing<sp/>guis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>GtkEntry<sp/>*<sp/><ref refid="structlog_in_window_1a7ffe728874b6e9722a628acbf978a224" kindref="member">passwordField</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>GtkEntry<sp/>*<sp/><ref refid="structlog_in_window_1a43a4588fa53f66599d2e81f055dd7ef7" kindref="member">usernameField</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlog_in_window_1a8e1de2175d8aeda26c2b0725b91632a8" kindref="member">attempts</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlog_in_window_1a0bd9e40aa54582b6eaac4ee0c51f0f7f" kindref="member">maxLoginAttempts</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structlog_in_window_1a59460a3ff2c12443d1022e5cc0fba85c" kindref="member">password</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}<sp/><ref refid="main_8c_1a8e1170805a53ee8c3845cb6e425aa233" kindref="member">LoginWindow</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structconfig_window" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconfig_window" kindref="compound">configWindow</ref><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&quot;inherit&quot;<sp/>from<sp/>our<sp/>base<sp/>win<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aa95cc25626aaea9a264528de81ad3c09" kindref="member">INHERIT_BASE_WIN</ref></highlight></codeline>
<codeline lineno="242"><highlight class="normal">}<sp/><ref refid="main_8c_1aed36cff1d64d95e664ec581815c2814b" kindref="member">ConfigWindow</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="structadmin_window" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structadmin_window" kindref="compound">adminWindow</ref><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&quot;inherit&quot;<sp/>from<sp/>our<sp/>base<sp/>win<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aa95cc25626aaea9a264528de81ad3c09" kindref="member">INHERIT_BASE_WIN</ref></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="structlog_in_window" kindref="compound">LoginWindow</ref><sp/><ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>inputs<sp/>fileds<sp/>of<sp/>the<sp/>admin<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>GtkEntry<sp/>*<sp/><ref refid="structadmin_window_1a79be35aa00a0bd518bc1af2a6a9dd0c2" kindref="member">propertyNameInput</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>GtkEntry<sp/>*<sp/><ref refid="structadmin_window_1a78e87efdfeb1fff6dcb647ba9d23885a" kindref="member">baseDiscountInput</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>GtkLabel<sp/>*<sp/><ref refid="structadmin_window_1a6d1e4cfe5c5be4049dc596c0ed576505" kindref="member">totalMoneyLabel</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>GtkLabel<sp/>*<sp/><ref refid="structadmin_window_1a77cd1e65da7acfdbee11df3504874034" kindref="member">totalNightsLabel</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">}<sp/><ref refid="main_8c_1a5a63edfd294f78985feeb3fc83f194bd" kindref="member">AdminWindow</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="structreview_window" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structreview_window" kindref="compound">reviewWindow</ref><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&quot;inherit&quot;<sp/>from<sp/>our<sp/>base<sp/>win<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aa95cc25626aaea9a264528de81ad3c09" kindref="member">INHERIT_BASE_WIN</ref></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>inputs<sp/>fileds<sp/>for<sp/>the<sp/>review</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>GtkEntry<sp/>*<sp/><ref refid="structreview_window_1a9a3f2e5a8dd7d12f937d7f9842202957" kindref="member">inputs</ref>[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>submit<sp/>btn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>GtkButton<sp/>*<sp/><ref refid="structreview_window_1ab7183ac989e82ad331573935544fa1ed" kindref="member">submitBtn</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">}<sp/><ref refid="main_8c_1aedaaa3f425adc8ef27426e9ecbf63d29" kindref="member">ReviewWindow</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="structcustomer_window" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcustomer_window" kindref="compound">customerWindow</ref><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&quot;inherit&quot;<sp/>from<sp/>our<sp/>base<sp/>win<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aa95cc25626aaea9a264528de81ad3c09" kindref="member">INHERIT_BASE_WIN</ref></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/><ref refid="structcustomer_window_1a794d03e6de4509b6d710079af21479fe" kindref="member">priceRendererWindow</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/><ref refid="structcustomer_window_1a3e3af5fe6bee487683e343bb777b8293" kindref="member">inputEntry</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/><ref refid="structcustomer_window_1a2e8db791568891a34d0bb2147e9218d2" kindref="member">reviewTable</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/><ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}<sp/><ref refid="main_8c_1a0667ea4347c9b9d6c5692361185eab3a" kindref="member">CustomerWindow</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="structapp" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structapp" kindref="compound">app</ref><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&quot;inherit&quot;<sp/>from<sp/>our<sp/>base<sp/>win<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aa95cc25626aaea9a264528de81ad3c09" kindref="member">INHERIT_BASE_WIN</ref></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>reference<sp/>to<sp/>our<sp/>main<sp/>gtk<sp/>app</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>GtkApplication*<sp/><ref refid="structapp_1a9dc2227404041523ad87d36ade941f70" kindref="member">app</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="structproperty" kindref="compound">Property</ref><sp/><ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="structcustomer_window" kindref="compound">CustomerWindow</ref><sp/><ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="structadmin_window" kindref="compound">AdminWindow</ref><sp/><ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="structconfig_window" kindref="compound">ConfigWindow</ref><sp/><ref refid="structapp_1aa458ec780a071b6c509efc202e029bf4" kindref="member">configWindow</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="structreview_window" kindref="compound">ReviewWindow</ref><sp/><ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}<sp/><ref refid="main_8c_1a7afb31fe444397deb0375c093030682d" kindref="member">App</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>Prototypes</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1acb547fc473a45efe1612cf333ec2b0a1" kindref="member">cleanUpReviews</ref>(<ref refid="structproperty" kindref="compound">Property</ref><sp/>*<sp/>propertyPtr);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1af34961ca790e86a4ed67c0362924a260" kindref="member">addReview</ref>(<ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>review[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>]);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a579214ebbaa002f5dd7d119bc64ac24d" kindref="member">initProperty</ref>(<ref refid="structproperty" kindref="compound">Property</ref><sp/>*<sp/><ref refid="structproperty" kindref="compound">property</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a73b13b5e2d9bcacf35a4369a9270c43f" kindref="member">initLocation</ref>(<ref refid="structlocation" kindref="compound">Location</ref><sp/>*<sp/>loc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>address[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lon);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAdminInputs(<ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ab9e636ad749a158db97c594fe5dcb182" kindref="member">getValidIntInputWithSentinels</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PROMPT[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SENTINEL_VALUES[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aa136ea4239d59d6fdcf01a88db908497" kindref="member">calculateDiscount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>night,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNT_RANGES[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNTS[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a85bdc4d907ddea25da7b38f61eb95ccd" kindref="member">calculateCost</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nights,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>basePrice,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNT_RANGES[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNTS[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1af930487fde31f5b0bfa65a3b0b1bdbfb" kindref="member">displayCost</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nights,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cost);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a49be7264a1719899398ed267e69188d4" kindref="member">chargeUser</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uuid[],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cost,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cardNum[]);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad0b5b543d8690bb4ddefc6b64428f7eb" kindref="member">getBooking</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>valuePt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SENTINELS[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a7eedf911c331de9894b62bdc926a0b07" kindref="member">intArrContains</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ARR[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a2fd4dc35b8b9778a29fc386d0829cda9" kindref="member">displayRentalPropertyInfo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>basePrice,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNT_RANGES[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNTS[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loginWindowInit(GtkApplication*<sp/><ref refid="structapp" kindref="compound">app</ref>,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reviewWindowInit(GtkApplication*<sp/><ref refid="structapp" kindref="compound">app</ref>,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>makeBtnWithCb(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*cb)<sp/>(GtkWidget<sp/>*widget,<sp/>gpointer<sp/>data));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>TabHeaders(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mainWindowUpdateReviews(<ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onChange(GtkWidget<sp/>*widget,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/><ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onChangeValidateRangeOfReview(GtkWidget<sp/>*widget,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/><ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>makeHtmlStyleLabelWithLabel(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>headerText,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>displayText);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onCharge(GtkWidget<sp/>*widget,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/><ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>makeGridOfLabelsFromHeadersAndLinkedList(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>headers[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>][<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>],<sp/>ReviewNode<sp/>*<sp/>head);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>Function<sp/>Declarations</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1af34961ca790e86a4ed67c0362924a260" kindref="member">addReview</ref>(<ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>review[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>]){</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><ref refid="structproperty" kindref="compound">Property</ref><sp/>*<sp/>propertyPtr<sp/>=<sp/>&amp;mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>ReviewNode<sp/>*<sp/>currentPtr<sp/>=<sp/>propertyPtr-&gt;<ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//traverse<sp/>to<sp/>end<sp/>of<sp/>ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(currentPtr-&gt;next<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>currentPtr<sp/>=<sp/>currentPtr-&gt;next;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//current<sp/>node<sp/>is<sp/>now<sp/>the<sp/>end<sp/>of<sp/>the<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>ReviewNode<sp/>*<sp/>nodePtr<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ReviewNode));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>nodePtr-&gt;next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;val:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>review[i]);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>nodePtr-&gt;data[i]<sp/>=<sp/>review[i];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(propertyPtr-&gt;<ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref>-&gt;data[0]<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>last<sp/>node<sp/>is<sp/>not<sp/>the<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>currentPtr-&gt;next<sp/>=<sp/>nodePtr;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;here&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>free(propertyPtr-&gt;<ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>propertyPtr-&gt;<ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref><sp/>=<sp/>nodePtr;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>mainWindowUpdateReviews(mainApp);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1abef81d57e41bf73d65df4ef6652cea7e" kindref="member">cliMain</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-Constants<sp/>Declarations-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SENTINEL_NEG1<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MIN_RENTAL_NIGHTS<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MAX_RENTAL_NIGHTS<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>INTERVAL_1_NIGHTS<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>INTERVAL_2_NIGHTS<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RENTAL_RATE<sp/>=<sp/>400;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNT<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//define<sp/>our<sp/>config<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNT_RANGES[]<sp/>=<sp/>{0,<sp/>INTERVAL_1_NIGHTS,<sp/>INTERVAL_2_NIGHTS<sp/>};</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNTS[]<sp/>=<sp/>{0,<sp/>DISCOUNT,<sp/>DISCOUNT*2};<sp/></highlight><highlight class="comment">//with<sp/>something<sp/>like<sp/>this<sp/>discounts<sp/>are<sp/>usually<sp/>picked<sp/>by<sp/>hand<sp/>to<sp/>be<sp/>just<sp/>right,<sp/>rather<sp/>than<sp/>based<sp/>on<sp/>a<sp/>curve.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SENTINELS[]<sp/>=<sp/>{<sp/>SENTINEL_NEG1<sp/>};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-Constants<sp/>Ends-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>discountsLen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DISCOUNTS)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DISCOUNTS[0]);<sp/></highlight><highlight class="comment">//get<sp/>len<sp/>with<sp/>basic<sp/>bit<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sentinelLen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SENTINELS)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SENTINELS[0]);<sp/></highlight><highlight class="comment">//get<sp/>len<sp/>with<sp/>basic<sp/>bit<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//these<sp/>vars<sp/>will<sp/>track<sp/>total<sp/>rev/nights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalCost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalNights<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldContinue<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(shouldContinue)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userInputVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a2fd4dc35b8b9778a29fc386d0829cda9" kindref="member">displayRentalPropertyInfo</ref>(MIN_RENTAL_NIGHTS,<sp/>MAX_RENTAL_NIGHTS,<sp/>RENTAL_RATE,<sp/>DISCOUNT_RANGES,<sp/>DISCOUNTS,<sp/>discountsLen);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSentinel<sp/>=<sp/>!<ref refid="main_8c_1ad0b5b543d8690bb4ddefc6b64428f7eb" kindref="member">getBooking</ref>(&amp;userInputVal,<sp/>SENTINELS,<sp/>MIN_RENTAL_NIGHTS,<sp/>MAX_RENTAL_NIGHTS,<sp/>sentinelLen);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSentinel)<sp/>{<sp/></highlight><highlight class="comment">//if<sp/>a<sp/>sentinel<sp/>value<sp/>was<sp/>entered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sentinelVal<sp/>=<sp/>userInputVal;<sp/></highlight><highlight class="comment">//create<sp/>a<sp/>new<sp/>variable<sp/>for<sp/>specificity<sp/>sake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sentinelVal)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/></highlight><highlight class="comment">//we<sp/>would<sp/>have<sp/>to<sp/>use<sp/>preprocessor<sp/>define<sp/>macro<sp/>to<sp/>use<sp/>a<sp/>const<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>our<sp/>loop<sp/>and<sp/>display<sp/>owner<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldContinue<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-Rental<sp/>Owner<sp/>Summery-\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1af930487fde31f5b0bfa65a3b0b1bdbfb" kindref="member">displayCost</ref>(totalNights,<sp/>totalCost);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//if<sp/>a<sp/>sentinel<sp/>value<sp/>was<sp/>not<sp/>entered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nightsStayed<sp/>=<sp/>userInputVal;<sp/></highlight><highlight class="comment">//create<sp/>a<sp/>new<sp/>variable<sp/>for<sp/>clarity<sp/>that<sp/>this<sp/>is<sp/>what<sp/>this<sp/>variable<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/><ref refid="main_8c_1a85bdc4d907ddea25da7b38f61eb95ccd" kindref="member">calculateCost</ref>(nightsStayed,<sp/>RENTAL_RATE,<sp/>DISCOUNT_RANGES,<sp/>DISCOUNTS,<sp/>discountsLen);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalCost<sp/>+=<sp/>cost;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalNights<sp/>+=<sp/>nightsStayed;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1af930487fde31f5b0bfa65a3b0b1bdbfb" kindref="member">displayCost</ref>(nightsStayed,<sp/>cost);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a7eedf911c331de9894b62bdc926a0b07" kindref="member">intArrContains</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ARR[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>returnValue<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARR[i]<sp/>==<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//we<sp/>should<sp/>just<sp/>return<sp/>here<sp/>to<sp/>not<sp/>waste<sp/>cpu<sp/>cycles,<sp/>but<sp/>w/e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnValue;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad0b5b543d8690bb4ddefc6b64428f7eb" kindref="member">getBooking</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>valuePt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SENTINELS[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>returnVal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>prompt[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>the<sp/>number<sp/>of<sp/>nights<sp/>you<sp/>would<sp/>like<sp/>to<sp/>stay:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="main_8c_1ab9e636ad749a158db97c594fe5dcb182" kindref="member">getValidIntInputWithSentinels</ref>(prompt,<sp/>min,<sp/>max,<sp/>SENTINELS,<sp/>length);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a7eedf911c331de9894b62bdc926a0b07" kindref="member">intArrContains</ref>(SENTINELS,<sp/>val,<sp/>length))<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>user<sp/>entered<sp/>a<sp/>sentinel<sp/>value<sp/>set<sp/>the<sp/>return<sp/>value<sp/>to<sp/>false<sp/>and<sp/>edit<sp/>the<sp/>sentinel<sp/>val<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnVal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>*valuePt<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnVal;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">//note,<sp/>we<sp/>could<sp/>use<sp/>macros<sp/>to<sp/>make<sp/>this<sp/>a<sp/>generic-like<sp/>function<sp/>so<sp/>that<sp/>we<sp/>could<sp/>reuse<sp/>it<sp/>for<sp/>all<sp/>types.<sp/>see<sp/>below:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>header<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TYPE<sp/>getValidIn(char<sp/>prompt[],<sp/>char<sp/>err[],<sp/>TYPE<sp/>min,<sp/>TYPE<sp/>max)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/>out<sp/>of<sp/>header<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>TYPE<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>header.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>repeat<sp/>for<sp/>all<sp/>the<sp/>types<sp/>we<sp/>would<sp/>want,<sp/>I<sp/>am<sp/>aware<sp/>of<sp/>this,<sp/>but<sp/>we<sp/>have<sp/>not<sp/>covered<sp/>this<sp/>and<sp/>macros<sp/>are<sp/>a<sp/>bit<sp/>questionable<sp/>anyways</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ab9e636ad749a158db97c594fe5dcb182" kindref="member">getValidIntInputWithSentinels</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PROMPT[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SENTINEL_VALUES[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RANGE_ERR[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nError:<sp/>not<sp/>within<sp/>%d<sp/>and<sp/>%d.<sp/>Please<sp/>enter<sp/>the<sp/>value<sp/>again:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE_ERR[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\nError:<sp/>not<sp/>an<sp/>integer.<sp/>Please<sp/>enter<sp/>the<sp/>value<sp/>again:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validInput<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userInput<sp/>=<sp/>min<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>PROMPT);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!validInput)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>=<sp/>scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;userInput);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>input<sp/>is<sp/>valid<sp/>check<sp/>if<sp/>it<sp/>is<sp/>in<sp/>range<sp/>if<sp/>so<sp/>end<sp/>and<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userInput<sp/>&gt;=<sp/>min<sp/>&amp;&amp;<sp/>userInput<sp/>&lt;=<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validInput<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a7eedf911c331de9894b62bdc926a0b07" kindref="member">intArrContains</ref>(SENTINEL_VALUES,<sp/>userInput,<sp/>length))<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>value<sp/>is<sp/>a<sp/>sentinel<sp/>value<sp/>it<sp/>is<sp/>also<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validInput<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//out<sp/>of<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(RANGE_ERR,<sp/>min,<sp/>max);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//not<sp/>an<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>TYPE_ERR);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getchar()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//clear<sp/>buffer<sp/>so<sp/>there<sp/>is<sp/>no<sp/>leftover<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userInput;</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a2fd4dc35b8b9778a29fc386d0829cda9" kindref="member">displayRentalPropertyInfo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>basePrice,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNT_RANGES[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNTS[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//display<sp/>header<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-Rental<sp/>Property<sp/>Info-\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Rental<sp/>Property<sp/>can<sp/>be<sp/>rented<sp/>for<sp/>%d<sp/>to<sp/>%d<sp/>nights.\n&quot;</highlight><highlight class="normal">,<sp/>min,<sp/>max);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;$%.2f<sp/>rate<sp/>a<sp/>night<sp/>for<sp/>first<sp/>3<sp/>nights.\n&quot;</highlight><highlight class="normal">,<sp/>basePrice);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//display<sp/>mid<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>length<sp/>-1;<sp/>i++)<sp/></highlight><highlight class="comment">//skip<sp/>last<sp/>index<sp/>since<sp/>we<sp/>handle<sp/>that<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rangeMin<sp/>=<sp/>DISCOUNT_RANGES[i]+1;</highlight><highlight class="comment">//min<sp/>is<sp/>exclusive<sp/>so<sp/>add<sp/>one<sp/>to<sp/>make<sp/>it<sp/>inclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rangeMax<sp/>=<sp/>DISCOUNT_RANGES[i+1];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;$%.2f<sp/>rate<sp/>a<sp/>night<sp/>for<sp/>nights<sp/>%d<sp/>to<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>DISCOUNTS[i],<sp/>rangeMin,<sp/>rangeMax);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//display<sp/>final<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;$%.2f<sp/>rate<sp/>a<sp/>night<sp/>for<sp/>nights<sp/>over<sp/>%d.\n\n&quot;</highlight><highlight class="normal">,<sp/>DISCOUNTS[length<sp/>-1],<sp/>DISCOUNT_RANGES[length<sp/>-1]);</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aa136ea4239d59d6fdcf01a88db908497" kindref="member">calculateDiscount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>night,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNT_RANGES[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNTS[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>discount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>last<sp/>day<sp/>of<sp/>the<sp/>last<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastDay<sp/>=<sp/>DISCOUNT_RANGES[length<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>through<sp/>our<sp/>array<sp/>finding<sp/>the<sp/>discount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(night<sp/>&lt;<sp/>lastDay)<sp/>{<sp/></highlight><highlight class="comment">//if<sp/>not<sp/>the<sp/>last<sp/>discount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>through<sp/>our<sp/>array<sp/>of<sp/>discounts<sp/>checking<sp/>if<sp/>the<sp/>night<sp/>is<sp/>in<sp/>the<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rangeMin<sp/>=<sp/>DISCOUNT_RANGES[i];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rangeMax<sp/>=<sp/>DISCOUNT_RANGES[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(night<sp/>&gt;<sp/>rangeMin<sp/>&amp;&amp;<sp/>night<sp/>&lt;=<sp/>rangeMax)<sp/>{</highlight><highlight class="comment">//min<sp/>is<sp/>exclusive<sp/>max<sp/>is<sp/>inclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discount<sp/>=<sp/>DISCOUNTS[i];<sp/></highlight><highlight class="comment">//we<sp/>should<sp/>just<sp/>return<sp/>here<sp/>to<sp/>save<sp/>cpu<sp/>cycles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//if<sp/>last<sp/>discount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discount<sp/>=<sp/>DISCOUNTS[length<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>discount;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a85bdc4d907ddea25da7b38f61eb95ccd" kindref="member">calculateCost</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nights,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>basePrice,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNT_RANGES[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DISCOUNTS[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalCost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>nights;<sp/>i++)<sp/></highlight><highlight class="comment">//note<sp/>that<sp/>we<sp/>start<sp/>at<sp/>1<sp/>and<sp/>loop<sp/>till<sp/>less<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>1<sp/>so<sp/>that<sp/>we<sp/>have<sp/>the<sp/>number<sp/>of<sp/>the<sp/>night,<sp/>not<sp/>its<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>discount<sp/>=<sp/><ref refid="main_8c_1aa136ea4239d59d6fdcf01a88db908497" kindref="member">calculateDiscount</ref>(i,<sp/>DISCOUNT_RANGES,<sp/>DISCOUNTS,<sp/>length);<sp/></highlight><highlight class="comment">//find<sp/>the<sp/>discount<sp/>for<sp/>this<sp/>night</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nightCost<sp/>=<sp/>basePrice<sp/>-<sp/>discount;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalCost<sp/>+=<sp/>nightCost;<sp/></highlight><highlight class="comment">//sum<sp/>all<sp/>costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalCost;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1af930487fde31f5b0bfa65a3b0b1bdbfb" kindref="member">displayCost</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nights,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cost)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//display<sp/>simple<sp/>table<sp/>formate<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n-Rental<sp/>Charges-\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%-10s<sp/>%s%-10s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Nights&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Charge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%-10d<sp/>%s%-.2f\n&quot;</highlight><highlight class="normal">,<sp/>nights,</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>cost);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>Air<sp/>UCCS<sp/>front<sp/>end<sp/>code</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NumTabs<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal">GtkWidget<sp/>*<sp/><ref refid="main_8c_1aacb3b7f85948a76fa11df31c02e98fc8" kindref="member">windows</ref>[<ref refid="main_8c_1a0599f56005d18d1574abdb5b746e69cc" kindref="member">NumTabs</ref>]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="main_8c_1a6c5820a0ceef740c20441d04df24950a" kindref="member">names</ref>[<ref refid="main_8c_1a0599f56005d18d1574abdb5b746e69cc" kindref="member">NumTabs</ref>]<sp/>=<sp/><sp/>{</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Analytics&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Login&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>makeBtnWithCb(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*cb)<sp/>(GtkWidget<sp/>*widget,<sp/>gpointer<sp/>data)){</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>btn<sp/>=<sp/>gtk_button_new_with_label<sp/>(label);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>g_signal_connect<sp/>(btn,<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK<sp/>(cb),<sp/>btn);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>btn;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>switchWin(GtkWidget<sp/>*widget,<sp/>gpointer<sp/>data){</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>GtkRoot<sp/>*root<sp/>=<sp/>gtk_widget_get_root<sp/>(GTK_WIDGET<sp/>(widget));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>windowName<sp/>=<sp/>gtk_button_get_label(GTK_BUTTON(widget));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>GtkWindow<sp/>*window<sp/>=<sp/>GTK_WINDOW<sp/>(root);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1a0599f56005d18d1574abdb5b746e69cc" kindref="member">NumTabs</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(<ref refid="main_8c_1a6c5820a0ceef740c20441d04df24950a" kindref="member">names</ref>[i],<sp/>windowName)){</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gtk_window_present(GTK_WINDOW(<ref refid="main_8c_1aacb3b7f85948a76fa11df31c02e98fc8" kindref="member">windows</ref>[i]));</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>TabHeaders(){</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*grid<sp/>=<sp/>gtk_grid_new<sp/>();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1a0599f56005d18d1574abdb5b746e69cc" kindref="member">NumTabs</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>GtkWidget<sp/>*tab<sp/>=<sp/>makeBtnWithCb(<ref refid="main_8c_1a6c5820a0ceef740c20441d04df24950a" kindref="member">names</ref>[i],switchWin);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>tab,<sp/>i,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>grid;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>makeHtmlStyleEntryWithLabel(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>displayText){</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*<sp/>widget<sp/>=<sp/>gtk_grid_new<sp/>();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*entry<sp/>=<sp/>gtk_entry_new();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*label<sp/>=<sp/>gtk_label_new_with_mnemonic<sp/>(displayText);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(widget),<sp/>entry,<sp/>1,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(widget),<sp/>label,<sp/>0,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>widget;</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>makeHtmlStyleLabelWithLabel(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>headerText,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>displayText){</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*<sp/>widget<sp/>=<sp/>gtk_grid_new<sp/>();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*entry<sp/>=<sp/>gtk_entry_new();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*label<sp/>=<sp/>gtk_label_new_with_mnemonic<sp/>(headerText);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*label2<sp/>=<sp/>gtk_label_new_with_mnemonic<sp/>(displayText);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(widget),<sp/>label2,<sp/>1,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(widget),<sp/>label,<sp/>0,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>widget;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>makeGridOfLabelsFromHeadersAndLinkedList(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>headers[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>][<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>],<sp/>ReviewNode<sp/>*<sp/>head){<sp/></highlight><highlight class="comment">//note<sp/>this<sp/>only<sp/>works<sp/>C99+<sp/>we<sp/>can<sp/>use<sp/>a<sp/>macro<sp/>to<sp/>do<sp/>this<sp/>if<sp/>we<sp/>need<sp/>C98-<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*<sp/>widget<sp/>=<sp/>gtk_grid_new<sp/>();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>;<sp/>x++){</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/>headers[x];</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>newString[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>+20]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcat(newString,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GtkWidget<sp/>*label<sp/>=<sp/>gtk_label_new_with_mnemonic<sp/>(newString);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(widget),<sp/>label,<sp/>x,<sp/>y,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>y++;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//traverse<sp/>linked<sp/>list<sp/>adding<sp/>each<sp/>review</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>ReviewNode<sp/>*<sp/>current<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(head-&gt;data[0]<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>;<sp/>x++){</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>];</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itoa(current-&gt;data[x],<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkWidget<sp/>*label<sp/>=<sp/>gtk_label_new_with_mnemonic<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(widget),<sp/>label,<sp/>x,<sp/>y,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//increment<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y++;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//traverse<sp/>ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;next;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>widget;</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GtkWidget<sp/>*<sp/>windowBase(GtkApplication*<sp/><ref refid="structapp" kindref="compound">app</ref>){</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>GtkWidget*<sp/>win<sp/>=<sp/><sp/>gtk_application_window_new<sp/>(<ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*grid<sp/>=<sp/>gtk_grid_new<sp/>();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>tabs<sp/>=<sp/>TabHeaders();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>gtk_window_set_child<sp/>(GTK_WINDOW<sp/>(win),<sp/>grid);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//0,0<sp/>10<sp/>width,<sp/>1<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>tabs,<sp/>0,<sp/>0,<sp/>10,<sp/>1);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>win;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onChange(GtkWidget<sp/>*widget,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/><ref refid="structapp" kindref="compound">app</ref>){</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structproperty" kindref="compound">Property</ref><sp/>data<sp/>=<sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcustomer_window" kindref="compound">CustomerWindow</ref><sp/>mainWin<sp/>=<sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nightsStayed<sp/>=<sp/>atoi(gtk_entry_buffer_get_text(gtk_entry_get_buffer(GTK_ENTRY(mainWin.<ref refid="structcustomer_window_1a3e3af5fe6bee487683e343bb777b8293" kindref="member">inputEntry</ref>))));</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>For<sp/>%d<sp/>nights\n&quot;</highlight><highlight class="normal">,<sp/>nightsStayed);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/><ref refid="main_8c_1a85bdc4d907ddea25da7b38f61eb95ccd" kindref="member">calculateCost</ref>(nightsStayed,<sp/>data.<ref refid="structproperty_1a7b621736f2a57bb77067f9ef4d8798c2" kindref="member">baseDiscount</ref>,<sp/>data.<ref refid="structproperty_1ac25840037114824712a266b5827a4f37" kindref="member">dayRanges</ref>,<sp/>data.<ref refid="structproperty_1a78cfc4adb15fb15e26a8bee390778e7a" kindref="member">discounts</ref>,<sp/><ref refid="main_8c_1a71147341558d2823036988bfc0e6575d" kindref="member">NUMBER_OF_PRICE_RANGES</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>intStr[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>];</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>header[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Cost:<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Estimate:<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>cost);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(intStr,<sp/></highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">,<sp/>cost);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(header,<sp/>intStr);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_label_set_text<sp/>(GTK_LABEL<sp/>(mainWin.<ref refid="structcustomer_window_1a794d03e6de4509b6d710079af21479fe" kindref="member">priceRendererWindow</ref>),<sp/>header);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onCharge(GtkWidget<sp/>*widget,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/><ref refid="structapp" kindref="compound">app</ref>){</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structproperty" kindref="compound">Property</ref><sp/>data<sp/>=<sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcustomer_window" kindref="compound">CustomerWindow</ref><sp/>mainWin<sp/>=<sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nightsStayed<sp/>=<sp/>atoi(gtk_entry_buffer_get_text(gtk_entry_get_buffer(GTK_ENTRY(mainWin.<ref refid="structcustomer_window_1a3e3af5fe6bee487683e343bb777b8293" kindref="member">inputEntry</ref>))));</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Paying<sp/>For<sp/>%d<sp/>nights\n&quot;</highlight><highlight class="normal">,<sp/>nightsStayed);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/><ref refid="main_8c_1a85bdc4d907ddea25da7b38f61eb95ccd" kindref="member">calculateCost</ref>(nightsStayed,<sp/>data.<ref refid="structproperty_1a7b621736f2a57bb77067f9ef4d8798c2" kindref="member">baseDiscount</ref>,<sp/>data.<ref refid="structproperty_1ac25840037114824712a266b5827a4f37" kindref="member">dayRanges</ref>,<sp/>data.<ref refid="structproperty_1a78cfc4adb15fb15e26a8bee390778e7a" kindref="member">discounts</ref>,<sp/><ref refid="main_8c_1a71147341558d2823036988bfc0e6575d" kindref="member">NUMBER_OF_PRICE_RANGES</ref>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1a36c611bac2391f464098144cfdfd95d0" kindref="member">totalMoney</ref><sp/>+=<sp/>cost;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1a85d4797ede393d7546c32bf2e3f18196" kindref="member">totalNights</ref><sp/>+=<sp/>nightsStayed;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>intStr[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>];</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>header[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Cost:<sp/>$&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Cost:<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>cost);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(intStr,<sp/></highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">,<sp/>cost);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(header,<sp/>intStr);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(header,<sp/></highlight><highlight class="stringliteral">&quot;\nThank<sp/>You<sp/>&lt;3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//open<sp/>review<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_window_present(GTK_WINDOW(<ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.window));</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_label_set_text<sp/>(GTK_LABEL<sp/>(mainWin.<ref refid="structcustomer_window_1a794d03e6de4509b6d710079af21479fe" kindref="member">priceRendererWindow</ref>),<sp/>header);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>our<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAdminInputs(<ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mainWindowUpdateReviews(<ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp){</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GTK_IS_GRID(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref>)){</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_grid_remove(GTK_GRID(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref>),<sp/>GTK_WIDGET(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a2e8db791568891a34d0bb2147e9218d2" kindref="member">reviewTable</ref>));</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a2e8db791568891a34d0bb2147e9218d2" kindref="member">reviewTable</ref><sp/>=<sp/>GTK_WIDGET(makeGridOfLabelsFromHeadersAndLinkedList(mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1af08531d2b1e2a3c0dff557786a09341d" kindref="member">headers</ref>,<sp/>mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref>));</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref>),<sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a2e8db791568891a34d0bb2147e9218d2" kindref="member">reviewTable</ref>,<sp/>4,<sp/>0,<sp/>5,<sp/>5);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mainWindowInit(GtkApplication*<sp/><ref refid="structapp" kindref="compound">app</ref>,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp){</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>our<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><ref refid="structproperty" kindref="compound">Property</ref><sp/><ref refid="structproperty" kindref="compound">property</ref>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1a579214ebbaa002f5dd7d119bc64ac24d" kindref="member">initProperty</ref>(&amp;<ref refid="structproperty" kindref="compound">property</ref>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref><sp/>=<sp/><ref refid="structproperty" kindref="compound">property</ref>;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a794d03e6de4509b6d710079af21479fe" kindref="member">priceRendererWindow</ref><sp/>=<sp/>gtk_label_new_with_mnemonic<sp/>(</highlight><highlight class="stringliteral">&quot;type<sp/>a<sp/>num<sp/>for<sp/>an<sp/>estimate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>here<sp/>for<sp/>easy<sp/>testing<sp/>and<sp/>generation<sp/>of<sp/>reviews</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//I<sp/>geuss<sp/>it<sp/>should<sp/>probably<sp/>be<sp/>a<sp/>macro<sp/>that<sp/>is<sp/>only<sp/>included<sp/>in<sp/>the<sp/>compile<sp/>time<sp/>code<sp/>if<sp/>its<sp/>enabled<sp/>so<sp/>that<sp/>there<sp/>is<sp/>no<sp/>bloat<sp/>in<sp/>the<sp/>prod<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8c_1a45f2278bc729f1796e44d1d1a2a79568" kindref="member">ADD_MOCK_REVIEWS</ref>){</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arr[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>]<sp/>=<sp/>{1,5,3,2,1};</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>quickRandomize<sp/>(){</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i]<sp/>=<sp/>(rand()<sp/>%<sp/>(<ref refid="main_8c_1a2cac2faee136330ef8ab53af2312f4ec" kindref="member">MAX_REVIEW</ref><sp/>-<sp/>1<sp/>+<sp/>1))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1af34961ca790e86a4ed67c0362924a260" kindref="member">addReview</ref>(mainApp,<sp/>arr);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>quickRandomize();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1af34961ca790e86a4ed67c0362924a260" kindref="member">addReview</ref>(mainApp,<sp/>arr);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>quickRandomize();</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1af34961ca790e86a4ed67c0362924a260" kindref="member">addReview</ref>(mainApp,<sp/>arr);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>quickRandomize();</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1af34961ca790e86a4ed67c0362924a260" kindref="member">addReview</ref>(mainApp,<sp/>arr);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>quickRandomize();</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1af34961ca790e86a4ed67c0362924a260" kindref="member">addReview</ref>(mainApp,<sp/>arr);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//init<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.window<sp/>=<sp/>windowBase<sp/>(<ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>name<sp/>and<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>gtk_window_set_title<sp/>(GTK_WINDOW<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.window),<sp/></highlight><highlight class="stringliteral">&quot;Air<sp/>UCCS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>gtk_window_set_default_size<sp/>(GTK_WINDOW<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.window),<sp/>500,<sp/>500);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>nights<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>input<sp/>=<sp/>makeHtmlStyleEntryWithLabel(</highlight><highlight class="stringliteral">&quot;nights&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>btn<sp/>=<sp/>gtk_button_new_with_label<sp/>(</highlight><highlight class="stringliteral">&quot;Pay&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a3e3af5fe6bee487683e343bb777b8293" kindref="member">inputEntry</ref><sp/>=<sp/>gtk_grid_get_child_at(GTK_GRID<sp/>(input),<sp/>1,0);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>g_signal_connect<sp/>(btn,<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK<sp/>(onCharge),<sp/>mainApp);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>g_signal_connect<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a3e3af5fe6bee487683e343bb777b8293" kindref="member">inputEntry</ref>,<sp/></highlight><highlight class="stringliteral">&quot;changed&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK<sp/>(onChange),<sp/>mainApp);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref><sp/>=<sp/>gtk_window_get_child(GTK_WINDOW<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.window));;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a2e8db791568891a34d0bb2147e9218d2" kindref="member">reviewTable</ref><sp/>=<sp/>makeGridOfLabelsFromHeadersAndLinkedList(mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1af08531d2b1e2a3c0dff557786a09341d" kindref="member">headers</ref>,<sp/>mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1ac53d8f9542287aabb0ac5b5dc94db274" kindref="member">reviewsHead</ref>);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref>),<sp/>input,<sp/>0,<sp/>1,<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref>),<sp/>btn,<sp/>0,<sp/>3,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref>),<sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a794d03e6de4509b6d710079af21479fe" kindref="member">priceRendererWindow</ref>,<sp/>0,<sp/>4,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a9e32cf5ab494c238e3a5a8de90872fb4" kindref="member">grid</ref>),<sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.<ref refid="structcustomer_window_1a2e8db791568891a34d0bb2147e9218d2" kindref="member">reviewTable</ref>,<sp/>4,<sp/>0,<sp/>5,<sp/>5);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//hook<sp/>onto<sp/>the<sp/>on<sp/>close<sp/>function<sp/>of<sp/>gtk<sp/>to<sp/>cleanup<sp/>our<sp/>linked<sp/>list<sp/>on<sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>g_signal_connect(<ref refid="structapp" kindref="compound">app</ref>,<sp/></highlight><highlight class="stringliteral">&quot;delete-event&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(<ref refid="main_8c_1acb547fc473a45efe1612cf333ec2b0a1" kindref="member">cleanUpReviews</ref>),<sp/>NULL);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onLogin(GtkWidget<sp/>*widget,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/><ref refid="structapp" kindref="compound">app</ref>){</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;attempts:<sp/>%d\n&quot;</highlight><highlight class="normal">,<ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a8e1de2175d8aeda26c2b0725b91632a8" kindref="member">attempts</ref>);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a8e1de2175d8aeda26c2b0725b91632a8" kindref="member">attempts</ref>++;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a8e1de2175d8aeda26c2b0725b91632a8" kindref="member">attempts</ref><sp/>&lt;<sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a0bd9e40aa54582b6eaac4ee0c51f0f7f" kindref="member">maxLoginAttempts</ref>){</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>user<sp/>can<sp/>make<sp/>any<sp/>more<sp/>attempts<sp/>to<sp/>login</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>passwordIn<sp/>=<sp/>gtk_entry_buffer_get_text(gtk_entry_get_buffer(GTK_ENTRY(<ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a7ffe728874b6e9722a628acbf978a224" kindref="member">passwordField</ref>)));</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(passwordIn,<sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a59460a3ff2c12443d1022e5cc0fba85c" kindref="member">password</ref>)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//password<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>attempts<sp/>and<sp/>show<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a8e1de2175d8aeda26c2b0725b91632a8" kindref="member">attempts</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gtk_window_present(GTK_WINDOW(<ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.window));</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//password<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>implmenet<sp/>alert/popup/msgbox<sp/>and<sp/>display<sp/>err</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>window<sp/>if<sp/>they<sp/>cannot<sp/>make<sp/>any<sp/>more<sp/>attempts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a8e1de2175d8aeda26c2b0725b91632a8" kindref="member">attempts</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>make<sp/>this<sp/>close<sp/>the<sp/>window<sp/>in<sp/>a<sp/>way<sp/>that<sp/>it<sp/>can<sp/>be<sp/>reopened,<sp/>for<sp/>now<sp/>just<sp/>hide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_widget_set_visible(GTK_WIDGET(<ref refid="structapp" kindref="compound">app</ref>-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.window),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onClick<sp/>(GtkWidget<sp/>*widget,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp){</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>review[<ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>]<sp/>=<sp/>{0,0,0,0,0};</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str<sp/>=<sp/>gtk_entry_buffer_get_text(gtk_entry_get_buffer(GTK_ENTRY(mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.<ref refid="structreview_window_1a9a3f2e5a8dd7d12f937d7f9842202957" kindref="member">inputs</ref>[i])));</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>end;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(int)<sp/>strtol(str,<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(end<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*end<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>review[i]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>review[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>review[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1af34961ca790e86a4ed67c0362924a260" kindref="member">addReview</ref>(mainApp,<sp/>review);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>make<sp/>this<sp/>close<sp/>the<sp/>window<sp/>in<sp/>a<sp/>way<sp/>that<sp/>it<sp/>can<sp/>be<sp/>reopened,<sp/>for<sp/>now<sp/>just<sp/>hide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>gtk_widget_set_visible(GTK_WIDGET(mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.window),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onChangeValidateRangeOfReview(GtkWidget<sp/>*widget,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/><ref refid="structapp" kindref="compound">app</ref>){</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>GtkEntry<sp/>*<sp/>entry<sp/>=<sp/>GTK_ENTRY(widget);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>str<sp/>=<sp/>gtk_entry_buffer_get_text(gtk_entry_get_buffer(entry));</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>end;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(int)<sp/>strtol(str,<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(end<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*end<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//valid<sp/>int<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&gt;<sp/><ref refid="main_8c_1a2cac2faee136330ef8ab53af2312f4ec" kindref="member">MAX_REVIEW</ref>){</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="main_8c_1a2cac2faee136330ef8ab53af2312f4ec" kindref="member">MAX_REVIEW</ref>;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldUpdate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/><ref refid="main_8c_1a190d1357e6d0ee51f3b008700ed84b08" kindref="member">MIN_REVIEW</ref>){</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="main_8c_1a190d1357e6d0ee51f3b008700ed84b08" kindref="member">MIN_REVIEW</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldUpdate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>input<sp/>to<sp/>the<sp/>adjusted<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(shouldUpdate){</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>we<sp/>can<sp/>update<sp/>it<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GTK_ACCESSIBLE(widget)){</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>newStr[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itoa(x,<sp/>newStr,<sp/>10);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GtkEntryBuffer<sp/>*<sp/>newBuffer<sp/>=<sp/>gtk_entry_buffer_new(newStr,<sp/><ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtk_entry_set_buffer<sp/>(entry,<sp/>newBuffer);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reviewWindowInit(GtkApplication*<sp/><ref refid="structapp" kindref="compound">app</ref>,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp){</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//init<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.window<sp/>=<sp/>windowBase<sp/>(<ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*grid<sp/>=<sp/>gtk_grid_new<sp/>();</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>gtk_window_set_child<sp/>(GTK_WINDOW<sp/>(mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.window),<sp/>grid);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>label<sp/>=<sp/>gtk_label_new_with_mnemonic(</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>review<sp/>of<sp/>the<sp/>property&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>label,<sp/>0,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//make<sp/>fields<sp/>for<sp/>reviews</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>header<sp/>=<sp/>mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1af08531d2b1e2a3c0dff557786a09341d" kindref="member">headers</ref>[i];</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>GtkWidget<sp/>*<sp/>entryAndLabel<sp/>=<sp/>makeHtmlStyleEntryWithLabel(header);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>just<sp/>the<sp/>entry<sp/>for<sp/>our<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.<ref refid="structreview_window_1a9a3f2e5a8dd7d12f937d7f9842202957" kindref="member">inputs</ref>[i]<sp/>=<sp/>GTK_ENTRY(gtk_grid_get_child_at(GTK_GRID<sp/>(entryAndLabel),<sp/>1,0));</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//attach<sp/>validation<sp/>cb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>g_signal_connect<sp/>(mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.<ref refid="structreview_window_1a9a3f2e5a8dd7d12f937d7f9842202957" kindref="member">inputs</ref>[i],<sp/></highlight><highlight class="stringliteral">&quot;changed&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK<sp/>(onChangeValidateRangeOfReview),<sp/>mainApp);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>entryAndLabel,<sp/>0,<sp/>i+1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.<ref refid="structreview_window_1ab7183ac989e82ad331573935544fa1ed" kindref="member">submitBtn</ref><sp/>=<sp/>GTK_BUTTON(gtk_button_new_with_label<sp/>(</highlight><highlight class="stringliteral">&quot;SubmitReview&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>the<sp/>on<sp/>click<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>g_signal_connect<sp/>(mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.<ref refid="structreview_window_1ab7183ac989e82ad331573935544fa1ed" kindref="member">submitBtn</ref>,<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK<sp/>(onClick),<sp/>mainApp);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>GTK_WIDGET(mainApp-&gt;<ref refid="structapp_1a718284dd7baf63f7c7f54bc705c9dacb" kindref="member">reviewWindow</ref>.<ref refid="structreview_window_1ab7183ac989e82ad331573935544fa1ed" kindref="member">submitBtn</ref>),<sp/>0,<sp/><ref refid="main_8c_1afe66cf1c04080a4cba6fc79833c5d249" kindref="member">NUMBER_OF_REVIEW_CATS</ref>+1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loginWindowInit(GtkApplication*<sp/><ref refid="structapp" kindref="compound">app</ref>,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp){</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.window<sp/>=<sp/>windowBase<sp/>(<ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>temp<sp/>login<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a8e1de2175d8aeda26c2b0725b91632a8" kindref="member">attempts</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a0bd9e40aa54582b6eaac4ee0c51f0f7f" kindref="member">maxLoginAttempts</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a59460a3ff2c12443d1022e5cc0fba85c" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>name<sp/>and<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>gtk_window_set_title<sp/>(GTK_WINDOW<sp/>(mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.window),<sp/></highlight><highlight class="stringliteral">&quot;Air<sp/>UCCS<sp/>-<sp/>Login&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>gtk_window_set_default_size<sp/>(GTK_WINDOW<sp/>(mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.window),<sp/>500,<sp/>500);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>nights<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>pass<sp/>=<sp/>makeHtmlStyleEntryWithLabel(</highlight><highlight class="stringliteral">&quot;Password<sp/>(eventually<sp/>key<sp/>pair)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>username<sp/>=<sp/>makeHtmlStyleEntryWithLabel(</highlight><highlight class="stringliteral">&quot;UserName<sp/>(eventually<sp/>key<sp/>pair)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>btn<sp/>=<sp/>gtk_button_new_with_label<sp/>(</highlight><highlight class="stringliteral">&quot;Login&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>our<sp/>references<sp/>to<sp/>the<sp/>widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a7ffe728874b6e9722a628acbf978a224" kindref="member">passwordField</ref><sp/>=<sp/>GTK_ENTRY(gtk_grid_get_child_at(GTK_GRID<sp/>(pass),<sp/>1,0));</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.<ref refid="structlog_in_window_1a43a4588fa53f66599d2e81f055dd7ef7" kindref="member">usernameField</ref><sp/>=<sp/>GTK_ENTRY(gtk_grid_get_child_at(GTK_GRID<sp/>(username),<sp/>1,0));</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*grid<sp/>=<sp/>gtk_window_get_child(GTK_WINDOW<sp/>(mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.window));</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>the<sp/>on<sp/>click<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>g_signal_connect<sp/>(btn,<sp/></highlight><highlight class="stringliteral">&quot;clicked&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK<sp/>(onLogin),<sp/>mainApp);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//add<sp/>all<sp/>our<sp/>widgets<sp/>to<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>pass,<sp/>0,<sp/>1,<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>username,<sp/>0,<sp/>3,<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>btn,<sp/>0,<sp/>5,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAdminInputs(<ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp){</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>default<sp/>values<sp/>for<sp/>our<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>refactor<sp/>to<sp/>use<sp/>loop<sp/>and<sp/>update<sp/>on<sp/>payment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//total<sp/>nights/money<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tempString[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>itoa(mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1a36c611bac2391f464098144cfdfd95d0" kindref="member">totalMoney</ref>,<sp/>tempString,<sp/>10);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>gtk_label_set_text(GTK_LABEL(mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a6d1e4cfe5c5be4049dc596c0ed576505" kindref="member">totalMoneyLabel</ref>),<sp/>tempString);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>itoa(mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1a85d4797ede393d7546c32bf2e3f18196" kindref="member">totalNights</ref>,<sp/>tempString,<sp/>10);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>gtk_label_set_text(GTK_LABEL(mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a77cd1e65da7acfdbee11df3504874034" kindref="member">totalNightsLabel</ref>),<sp/>tempString);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>placeholders<sp/>for<sp/>current<sp/>values<sp/>for<sp/>config<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//property<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>GtkEntryBuffer<sp/>*<sp/>propNameBuffer<sp/>=<sp/>gtk_entry_buffer_new(mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1a191b09831ce959fea615beb6f2b609d3" kindref="member">propertyName</ref>,<sp/><ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>gtk_entry_set_buffer<sp/>(GTK_ENTRY(mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a79be35aa00a0bd518bc1af2a6a9dd0c2" kindref="member">propertyNameInput</ref>),<sp/>propNameBuffer);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//base<sp/>discount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>itoa(mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1a7b621736f2a57bb77067f9ef4d8798c2" kindref="member">baseDiscount</ref>,<sp/>tempString,<sp/>10);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>GtkEntryBuffer<sp/>*<sp/>basediscountBuffer<sp/>=<sp/>gtk_entry_buffer_new(tempString,<sp/><ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>gtk_entry_set_buffer<sp/>(GTK_ENTRY(mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a78e87efdfeb1fff6dcb647ba9d23885a" kindref="member">baseDiscountInput</ref>),<sp/>basediscountBuffer);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>write<sp/>json.stringify<sp/>esque<sp/>thing<sp/>for<sp/>our<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GtkEntryBuffer<sp/>*<sp/>dayRangesBuffer<sp/>=<sp/>gtk_entry_buffer_new(mainApp-&gt;property.propertyName,<sp/>STRING_SIZE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gtk_entry_set_buffer<sp/>(GTK_ENTRY(gtk_grid_get_child_at(GTK_GRID<sp/>(dayRanges),<sp/>1,0)),<sp/>dayRangesBuffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GtkEntryBuffer<sp/>*<sp/>discountsBuffer<sp/>=<sp/>gtk_entry_buffer_new(mainApp-&gt;property.propertyName,<sp/>STRING_SIZE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gtk_entry_set_buffer<sp/>(GTK_ENTRY(gtk_grid_get_child_at(GTK_GRID<sp/>(discounts),<sp/>1,0)),<sp/>discountsBuffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>adminWindowInit(GtkApplication*<sp/><ref refid="structapp" kindref="compound">app</ref>,<sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp){</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.window<sp/>=<sp/>windowBase<sp/>(<ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>admin<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>propName<sp/>=<sp/>makeHtmlStyleEntryWithLabel(</highlight><highlight class="stringliteral">&quot;Property<sp/>Name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>baseDiscount<sp/>=<sp/>makeHtmlStyleEntryWithLabel(</highlight><highlight class="stringliteral">&quot;Base<sp/>Discount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>dayRanges<sp/>=<sp/>makeHtmlStyleEntryWithLabel(</highlight><highlight class="stringliteral">&quot;Day<sp/>Ranges&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>discounts<sp/>=<sp/>makeHtmlStyleEntryWithLabel(</highlight><highlight class="stringliteral">&quot;Discounts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>money<sp/>displays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tempString[<ref refid="main_8c_1ad78224efe1d3fb39b67ca74ad9d9eec7" kindref="member">STRING_SIZE</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>itoa(mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1a36c611bac2391f464098144cfdfd95d0" kindref="member">totalMoney</ref>,<sp/>tempString,<sp/>10);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>totalMoneyDisplay<sp/>=<sp/>makeHtmlStyleLabelWithLabel(</highlight><highlight class="stringliteral">&quot;Gross<sp/>Revenue:<sp/>&quot;</highlight><highlight class="normal">,<sp/>tempString);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>itoa(mainApp-&gt;<ref refid="structapp_1aec7fb0c3fce21190f990490e3f8f684f" kindref="member">property</ref>.<ref refid="structproperty_1a85d4797ede393d7546c32bf2e3f18196" kindref="member">totalNights</ref>,<sp/>tempString,<sp/>10);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*<sp/>totalNightsDisplay<sp/>=<sp/>makeHtmlStyleLabelWithLabel(</highlight><highlight class="stringliteral">&quot;Nights<sp/>Stayed:<sp/>&quot;</highlight><highlight class="normal">,<sp/>tempString);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>our<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a79be35aa00a0bd518bc1af2a6a9dd0c2" kindref="member">propertyNameInput</ref><sp/>=<sp/>GTK_ENTRY(gtk_grid_get_child_at(GTK_GRID<sp/>(propName),<sp/>1,0));</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a78e87efdfeb1fff6dcb647ba9d23885a" kindref="member">baseDiscountInput</ref><sp/>=<sp/>GTK_ENTRY(gtk_grid_get_child_at(GTK_GRID<sp/>(baseDiscount),<sp/>1,0));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a6d1e4cfe5c5be4049dc596c0ed576505" kindref="member">totalMoneyLabel</ref><sp/>=<sp/>GTK_LABEL(gtk_grid_get_child_at(GTK_GRID<sp/>(totalMoneyDisplay),<sp/>1,0));</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a77cd1e65da7acfdbee11df3504874034" kindref="member">totalNightsLabel</ref><sp/>=<sp/>GTK_LABEL(gtk_grid_get_child_at(GTK_GRID<sp/>(totalNightsDisplay),<sp/>1,0));</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*grid<sp/>=<sp/>gtk_grid_new<sp/>();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>gtk_window_set_child<sp/>(GTK_WINDOW<sp/>(mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.window),<sp/>grid);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//attach<sp/>our<sp/>widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//attach<sp/>our<sp/>displays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>totalMoneyDisplay,<sp/>0,<sp/>0,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>totalNightsDisplay,<sp/>0,<sp/>1,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//attach<sp/>our<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>propName,<sp/>0,<sp/>2,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>baseDiscount,<sp/>0,<sp/>3,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>dayRanges,<sp/>0,<sp/>4,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>gtk_grid_attach<sp/>(GTK_GRID<sp/>(grid),<sp/>discounts,<sp/>0,<sp/>5,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>login<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>loginWindowInit(<ref refid="structapp" kindref="compound">app</ref>,<sp/>mainApp);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//update<sp/>our<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/>updateAdminInputs(mainApp);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal">activate<sp/>(GtkApplication*<sp/><ref refid="structapp" kindref="compound">app</ref>,<sp/>gpointer<sp/>user_data)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//this<sp/>needs<sp/>to<sp/>be<sp/>on<sp/>the<sp/>heap<sp/>because<sp/>of<sp/>how<sp/>gtk<sp/>call<sp/>backs<sp/>work,<sp/>there<sp/>is<sp/>no<sp/>other<sp/>way<sp/>to<sp/>do<sp/>this<sp/>as<sp/>far<sp/>as<sp/>I<sp/>can<sp/>tell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//I<sp/>didn&apos;t<sp/>want<sp/>to<sp/>use<sp/>the<sp/>heap<sp/>before<sp/>we<sp/>covered<sp/>it,<sp/>but<sp/>this<sp/>is<sp/>the<sp/>only<sp/>solution<sp/>I<sp/>can<sp/>think<sp/>off<sp/>(I<sp/>spent<sp/>2<sp/>hours<sp/>on<sp/>this<sp/>I<sp/>might<sp/>be<sp/>dumb,<sp/>but<sp/>If<sp/>I<sp/>am<sp/>I<sp/>genially<sp/>do<sp/>not<sp/>know<sp/>any<sp/>other<sp/>way.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><ref refid="structapp" kindref="compound">App</ref><sp/>*<sp/>mainApp<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structapp" kindref="compound">App</ref>));</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>mainApp-&gt;<ref refid="structapp_1a9dc2227404041523ad87d36ade941f70" kindref="member">app</ref><sp/>=<sp/><ref refid="structapp" kindref="compound">app</ref>;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>mainWindowInit(<ref refid="structapp" kindref="compound">app</ref>,<sp/>mainApp);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>adminWindowInit(<ref refid="structapp" kindref="compound">app</ref>,<sp/>mainApp);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>reviewWindowInit(<ref refid="structapp" kindref="compound">app</ref>,<sp/>mainApp);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*mainWindow<sp/>=<sp/>mainApp-&gt;<ref refid="structapp_1acf4b482159a9b9d03391e4c2b205232e" kindref="member">customerWindow</ref>.window;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>GtkWidget<sp/>*admin<sp/>=<sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.window;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aacb3b7f85948a76fa11df31c02e98fc8" kindref="member">windows</ref>[0]<sp/>=<sp/>mainWindow;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aacb3b7f85948a76fa11df31c02e98fc8" kindref="member">windows</ref>[1]<sp/>=<sp/>mainApp-&gt;<ref refid="structapp_1aca5d38e13a701c2d1aafdb51e563d9d1" kindref="member">adminWindow</ref>.<ref refid="structadmin_window_1a17bd992ca7285badbf62743c458fa6e3" kindref="member">loginWindow</ref>.window;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><ref refid="main_8c_1aacb3b7f85948a76fa11df31c02e98fc8" kindref="member">windows</ref>[2]<sp/>=<sp/>mainApp-&gt;<ref refid="structapp_1aa458ec780a071b6c509efc202e029bf4" kindref="member">configWindow</ref>.window;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>gtk_window_present<sp/>(GTK_WINDOW<sp/>(mainWindow));</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeMem(){</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>free(mainApp);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//hook<sp/>into<sp/>the<sp/>on<sp/>delete<sp/>of<sp/>our<sp/>app<sp/>to<sp/>clean<sp/>up<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>g_signal_connect(<ref refid="structapp" kindref="compound">app</ref>,<sp/></highlight><highlight class="stringliteral">&quot;delete-event&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK(freeMem),<sp/>NULL);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><ref refid="key_gen_8c_1acdef7a1fd863a6d3770c1268cb06add3" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>argc,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/>GtkApplication<sp/>*<ref refid="structapp" kindref="compound">app</ref>;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><ref refid="structapp" kindref="compound">app</ref><sp/>=<sp/>gtk_application_new<sp/>(</highlight><highlight class="stringliteral">&quot;org.gtk.example&quot;</highlight><highlight class="normal">,<sp/>G_APPLICATION_DEFAULT_FLAGS);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>g_signal_connect<sp/>(<ref refid="structapp" kindref="compound">app</ref>,<sp/></highlight><highlight class="stringliteral">&quot;activate&quot;</highlight><highlight class="normal">,<sp/>G_CALLBACK<sp/>(activate),<sp/>NULL);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>g_application_run<sp/>(G_APPLICATION<sp/>(<ref refid="structapp" kindref="compound">app</ref>),<sp/>argc,<sp/>argv);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//app<sp/>clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>g_object_unref<sp/>(<ref refid="structapp" kindref="compound">app</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">//I<sp/>know<sp/>this<sp/>is<sp/>javascript<sp/>comment<sp/>syntax<sp/>but<sp/>its<sp/>pretty<sp/>and<sp/>is<sp/>my<sp/>preset.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="comment">//**========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RSA<sp/>KEY<sp/>GEN<sp/>section</highlight></codeline>
<codeline lineno="1284"><highlight class="comment"><sp/>*<sp/>@author<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mattie<sp/>--me:<sp/><sp/></highlight></codeline>
<codeline lineno="1285"><highlight class="comment"><sp/>*<sp/>@email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mmfulelr22@gmail.com:<sp/><sp/></highlight></codeline>
<codeline lineno="1286"><highlight class="comment"><sp/>*<sp/>@repo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://github.com/mattieFM/CS2060ClassCode2023:<sp/><sp/></highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/>*<sp/>@createdOn<sp/><sp/><sp/><sp/><sp/><sp/>idk:<sp/><sp/></highlight></codeline>
<codeline lineno="1288"><highlight class="comment"><sp/>*<sp/>@description<sp/><sp/><sp/><sp/>RSA<sp/>key<sp/>generation<sp/>for<sp/>pub/priv<sp/>key<sp/>pair<sp/>cypto:<sp/><sp/></highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/>*========================================================================**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="comment">//the<sp/>number<sp/>of<sp/>bits<sp/>of<sp/>our<sp/>prime<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT_LEVEL<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aecb3b10f315423f9de2e0c640a6f2d0d" kindref="member">nBitRandom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfBits);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aecb3b10f315423f9de2e0c640a6f2d0d" kindref="member">nBitRandom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfBits){</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>srand(time(0));</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>relatively<sp/>basic<sp/>math.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//since<sp/>binary<sp/>max<sp/>of<sp/>n<sp/>bits<sp/>is<sp/>2^n<sp/>-1<sp/>for<sp/>unsigned<sp/>numbs<sp/>we<sp/>can<sp/>make<sp/>an<sp/>easy<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maximum<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)<sp/>powl(2,<sp/>numberOfBits)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//then<sp/>we<sp/>want<sp/>the<sp/>smallest<sp/>n<sp/>bit<sp/>number<sp/>which<sp/>is<sp/>similarly<sp/>to<sp/>above<sp/>just<sp/>2^n-1<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minimum<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)<sp/>powl(2,<sp/>numberOfBits<sp/>-<sp/>1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minimum<sp/>+<sp/>(rand()<sp/>%<sp/>(<sp/>maximum<sp/>-<sp/>minimum<sp/>+<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main.c"/>
  </compounddef>
</doxygen>
